[{"D:\\Work\\Go sawa\\GoSawa\\src\\index.js":"1","D:\\Work\\Go sawa\\GoSawa\\src\\reportWebVitals.js":"2","D:\\Work\\Go sawa\\GoSawa\\src\\App.js":"3","D:\\Work\\Go sawa\\GoSawa\\src\\server\\store.js":"4","D:\\Work\\Go sawa\\GoSawa\\src\\server\\reducers\\rootReducer.js":"5","D:\\Work\\Go sawa\\GoSawa\\src\\server\\config.js":"6","D:\\Work\\Go sawa\\GoSawa\\src\\server\\reducers\\authReducer.js":"7","D:\\Work\\Go sawa\\GoSawa\\src\\Components\\Login\\login.js":"8","D:\\Work\\Go sawa\\GoSawa\\src\\Forms\\Add\\AddAdmin\\addAdmin.js":"9","D:\\Work\\Go sawa\\GoSawa\\src\\Forms\\Add\\AddRoute\\addRoute.js":"10","D:\\Work\\Go sawa\\GoSawa\\src\\Components\\Home\\home.js":"11","D:\\Work\\Go sawa\\GoSawa\\src\\guards\\ComponentGuard.js":"12","D:\\Work\\Go sawa\\GoSawa\\src\\Components\\navbar\\navbar.js":"13"},{"size":857,"mtime":1608902124654,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1608391155497,"results":"16","hashOfConfig":"15"},{"size":1298,"mtime":1608903145034,"results":"17","hashOfConfig":"15"},{"size":1181,"mtime":1608393166606,"results":"18","hashOfConfig":"15"},{"size":299,"mtime":1608392127909,"results":"19","hashOfConfig":"15"},{"size":808,"mtime":1608392468058,"results":"20","hashOfConfig":"15"},{"size":0,"mtime":1608391978294,"results":"21","hashOfConfig":"15"},{"size":1841,"mtime":1608839668035,"results":"22","hashOfConfig":"15"},{"size":4953,"mtime":1608839668047,"results":"23","hashOfConfig":"15"},{"size":4275,"mtime":1608839668048,"results":"24","hashOfConfig":"15"},{"size":216,"mtime":1608902657211,"results":"25","hashOfConfig":"15"},{"size":557,"mtime":1608839668049,"results":"26","hashOfConfig":"15"},{"size":781,"mtime":1608903928382,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"6meqco",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"31"},"D:\\Work\\Go sawa\\GoSawa\\src\\index.js",["62","63","64"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./server/store\";\r\nimport Login from \"./Components/Login/login\";\r\nimport AddAdmin from \"./Forms/Add/AddAdmin/addAdmin\"\r\nimport AddRoute from \"./Forms/Add/AddRoute/addRoute\"\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      {/* <App />*/}\r\n      {/*<Login />*/}\r\n      {/*<AddAdmin />*/}\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n  // If you want to start measuring performance in your app, pass a function\r\n  // to log results (for example: reportWebVitals(console.log))\r\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n  reportWebVitals();\r\n});\r\n",["65","66"],"D:\\Work\\Go sawa\\GoSawa\\src\\reportWebVitals.js",[],"D:\\Work\\Go sawa\\GoSawa\\src\\App.js",["67","68","69","70"],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ComponentGuard from \"./guards/ComponentGuard\";\r\nimport Home from \"./Components/Home/home\";\r\nimport store from \"./server/store\";\r\nimport Login from \"./Components/Login/login\";\r\nimport AddAdmin from \"./Forms/Add/AddAdmin/addAdmin\";\r\nimport AddRoute from \"./Forms/Add/AddRoute/addRoute\";\r\nimport Nav from \"./Components/navbar/navbar\";\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <nav></nav>\r\n        <Switch>\r\n          <ComponentGuard exact path=\"/\" component={Home} authRules={true} />\r\n          <ComponentGuard\r\n            exact\r\n            path=\"/login\"\r\n            component={Login}\r\n            authRules={true}\r\n            redirectPath={\"/\"}\r\n          />\r\n          <ComponentGuard\r\n            exact\r\n            path=\"/add-admin\"\r\n            component={AddAdmin}\r\n            authRules={true}\r\n            redirectPath={\"/\"}\r\n          />\r\n          <ComponentGuard\r\n            exact\r\n            path=\"/add-route\"\r\n            component={AddRoute}\r\n            authRules={true}\r\n            redirectPath={\"/\"}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Work\\Go sawa\\GoSawa\\src\\server\\store.js",[],"D:\\Work\\Go sawa\\GoSawa\\src\\server\\reducers\\rootReducer.js",[],["71","72"],"D:\\Work\\Go sawa\\GoSawa\\src\\server\\config.js",[],"D:\\Work\\Go sawa\\GoSawa\\src\\server\\reducers\\authReducer.js",[],"D:\\Work\\Go sawa\\GoSawa\\src\\Components\\Login\\login.js",["73"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport \"./login.css\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function BasicTextFields() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"container\"  >\r\n            <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n\r\n            >\r\n                <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n                    <Grid item container\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        direction=\"column\"\r\n                        spacing=\"6\"\r\n\r\n                    >\r\n                        <Grid item   >\r\n\r\n                            <h1>Login Now</h1>\r\n                        </Grid>\r\n                        <Grid item   >\r\n\r\n                            <TextField name=\"username\" id=\"loginUserName\" label=\"Username\" />\r\n                        </Grid>\r\n                        <Grid item  >\r\n\r\n                            <TextField name=\"password\" id=\"loginPassword\" label=\"Password\" />\r\n                        </Grid>\r\n                        <Grid item  >\r\n\r\n                            <Button variant=\"contained\" color=\"primary\" disableElevation>\r\n                                Login Now\r\n                            </Button>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}","D:\\Work\\Go sawa\\GoSawa\\src\\Forms\\Add\\AddAdmin\\addAdmin.js",["74","75"],"import * as React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport \"./addAdmin.css\"\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'firstName', headerName: 'First name', width: 130 },\r\n    { field: 'lastName', headerName: 'Last name', width: 130 },\r\n\r\n    {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        description: 'This column has a value getter and is not sortable.',\r\n        sortable: false,\r\n        width: 160,\r\n        valueGetter: (params) =>\r\n            `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\r\n    },\r\n];\r\n\r\nconst rows = [\r\n    { id: 1, lastName: 'Snow', firstName: 'Jon', },\r\n    { id: 2, lastName: 'Lannister', firstName: 'Cersei', },\r\n    { id: 3, lastName: 'Lannister', firstName: 'Jaime', },\r\n    { id: 4, lastName: 'Stark', firstName: 'Arya', },\r\n    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', },\r\n    { id: 6, lastName: 'Melisandre', firstName: null, },\r\n    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', },\r\n    { id: 8, lastName: 'Frances', firstName: 'Rossini', },\r\n    { id: 9, lastName: 'Roxie', firstName: 'Harvey', },\r\n];\r\n\r\n\r\n\r\n\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const body = (\r\n        <div className=\"container\"  >\r\n            <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n\r\n            >\r\n                <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n                    <Grid item container\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        direction=\"column\"\r\n                        spacing=\"6\"\r\n\r\n                    >\r\n                        <Grid item   >\r\n                            <TextField name=\"firstname\" id=\"AddAdminFirstName\" label=\"First Name\" />\r\n                        </Grid>\r\n                        <Grid item   >\r\n                            <TextField name=\"lastname\" id=\"AddAdminLastName\" label=\"Last Name\" />\r\n                        </Grid>\r\n                        <Grid item   >\r\n                            <TextField name=\"username\" id=\"AddAdminUserName\" label=\"Phone Or Username\" />\r\n                        </Grid>\r\n                        <Grid item  >\r\n\r\n                            <TextField name=\"password\" id=\"AddAdminPassword\" label=\"Password\" />\r\n                        </Grid>\r\n                        <Grid item  >\r\n\r\n                            <Button variant=\"contained\" color=\"primary\" disableElevation>\r\n                                Submit\r\n                        </Button>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                xs={12}\r\n            >\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                    <Button classname=\"addAdminBTN\" variant=\"contained\" onClick={handleOpen} color=\"primary\" disableElevation>\r\n                        Add New Admin\r\n                    </Button>\r\n                    <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n                </div>\r\n                <Modal\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                >\r\n                    {body}\r\n                </Modal>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","D:\\Work\\Go sawa\\GoSawa\\src\\Forms\\Add\\AddRoute\\addRoute.js",["76","77"],"import * as React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport \"./addRoute.css\"\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'startAt', headerName: 'Start At ', width: 130 },\r\n    { field: 'endAt', headerName: 'End At ', width: 130 },\r\n    { field: 'actions', headerName: 'Actions', width: 330 },\r\n\r\n\r\n];\r\n\r\nconst rows = [\r\n    { id: 1, endAt: 'Snow', startAd: 'Jon', },\r\n    { id: 2, endAt: 'Lannister', startAd: 'Cersei', },\r\n    { id: 3, endAt: 'Lannister', startAd: 'Jaime', },\r\n    { id: 4, endAt: 'Stark', startAd: 'Arya', },\r\n    { id: 5, endAt: 'Targaryen', startAd: 'Daenerys', },\r\n    { id: 6, endAt: 'Melisandre', startAd: null, },\r\n    { id: 7, endAt: 'Clifford', startAd: 'Ferrara', },\r\n    { id: 8, endAt: 'Frances', startAd: 'Rossini', },\r\n    { id: 9, endAt: 'Roxie', startAd: 'Harvey', },\r\n];\r\n\r\n\r\n\r\n\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const body = (\r\n        <div className=\"container\"  >\r\n            <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n\r\n            >\r\n                <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n                    <Grid item container\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        direction=\"column\"\r\n                        spacing=\"6\"\r\n\r\n                    >\r\n                        <Grid item   >\r\n                            <TextField name=\"startAt\" id=\"AddRouteStartAt\" label=\"Start At\" />\r\n                        </Grid>\r\n                        <Grid item   >\r\n                            <TextField name=\"endAt\" id=\"AddRouteEndAt\" label=\"End At\" />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item  >\r\n\r\n                            <Button variant=\"contained\" color=\"primary\" disableElevation>\r\n                                Submit\r\n                        </Button>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                xs={12}\r\n            >\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                    <Button classname=\"addAdminBTN\" variant=\"contained\" onClick={handleOpen} color=\"primary\" disableElevation>\r\n                        Add New Route\r\n                    </Button>\r\n                    <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n                </div>\r\n                <Modal\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                >\r\n                    {body}\r\n                </Modal>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","D:\\Work\\Go sawa\\GoSawa\\src\\Components\\Home\\home.js",[],"D:\\Work\\Go sawa\\GoSawa\\src\\guards\\ComponentGuard.js",[],"D:\\Work\\Go sawa\\GoSawa\\src\\Components\\navbar\\navbar.js",["78","79"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Nav() {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper\">\r\n        <a href=\"#\" className=\"brand-logo\">\r\n          Logo\r\n        </a>\r\n        <ul id=\"nav-mobile\" className=\"right \">\r\n          <li>\r\n            <a href=\"sass.html\">Sass</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"badges.html\">Components</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"collapsible.html\">JavaScript</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n",{"ruleId":"80","severity":1,"message":"81","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":13},{"ruleId":"80","severity":1,"message":"84","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":16},{"ruleId":"80","severity":1,"message":"85","line":9,"column":8,"nodeType":"82","messageId":"83","endLine":9,"endColumn":16},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"80","severity":1,"message":"90","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":12},{"ruleId":"80","severity":1,"message":"91","line":3,"column":25,"nodeType":"82","messageId":"83","endLine":3,"endColumn":30},{"ruleId":"80","severity":1,"message":"92","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":13},{"ruleId":"80","severity":1,"message":"93","line":10,"column":8,"nodeType":"82","messageId":"83","endLine":10,"endColumn":11},{"ruleId":"86","replacedBy":"94"},{"ruleId":"88","replacedBy":"95"},{"ruleId":"80","severity":1,"message":"96","line":18,"column":11,"nodeType":"82","messageId":"83","endLine":18,"endColumn":18},{"ruleId":"80","severity":1,"message":"96","line":68,"column":11,"nodeType":"82","messageId":"83","endLine":68,"endColumn":18},{"ruleId":"80","severity":1,"message":"97","line":70,"column":12,"nodeType":"82","messageId":"83","endLine":70,"endColumn":22},{"ruleId":"80","severity":1,"message":"96","line":61,"column":11,"nodeType":"82","messageId":"83","endLine":61,"endColumn":18},{"ruleId":"80","severity":1,"message":"97","line":63,"column":12,"nodeType":"82","messageId":"83","endLine":63,"endColumn":22},{"ruleId":"80","severity":1,"message":"98","line":4,"column":7,"nodeType":"82","messageId":"83","endLine":4,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":20,"column":9,"nodeType":"101","endLine":20,"endColumn":44},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'AddAdmin' is defined but never used.","'AddRoute' is defined but never used.","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"'logo' is defined but never used.","'Route' is defined but never used.","'store' is defined but never used.","'Nav' is defined but never used.",["102"],["103"],"'classes' is assigned a value but never used.","'modalStyle' is assigned a value but never used.","'useStyles' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]