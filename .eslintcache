[{"D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\index.js":"1","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\reportWebVitals.js":"2","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\App.js":"3","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\server\\store.js":"4","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Components\\Login\\login.js":"5","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Forms\\Add\\AddAdmin\\addAdmin.js":"6","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Forms\\Add\\AddRoute\\addRoute.js":"7","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Components\\Home\\home.js":"8","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Forms\\Add\\AddCaptian\\addCaptain.js":"9","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\guards\\ComponentGuard.js":"10","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Components\\navbar\\navbar.js":"11","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\server\\config.js":"12","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\server\\reducers\\rootReducer.js":"13","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\server\\actions\\authActions.js":"14","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Components\\assits\\listest.js":"15","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Components\\assits\\captainLists.js":"16","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\server\\reducers\\authReducer.js":"17","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Auth\\forgetPassword.js":"18","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Auth\\verification.js":"19"},{"size":857,"mtime":1610182242206,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1610182242207,"results":"22","hashOfConfig":"21"},{"size":2218,"mtime":1610187482025,"results":"23","hashOfConfig":"21"},{"size":1181,"mtime":1610182242210,"results":"24","hashOfConfig":"21"},{"size":2754,"mtime":1610191132004,"results":"25","hashOfConfig":"21"},{"size":7411,"mtime":1610204347718,"results":"26","hashOfConfig":"21"},{"size":18371,"mtime":1610203441574,"results":"27","hashOfConfig":"21"},{"size":216,"mtime":1610182242008,"results":"28","hashOfConfig":"21"},{"size":16603,"mtime":1610304505194,"results":"29","hashOfConfig":"21"},{"size":557,"mtime":1610182242206,"results":"30","hashOfConfig":"21"},{"size":2016,"mtime":1610182242011,"results":"31","hashOfConfig":"21"},{"size":808,"mtime":1610182242209,"results":"32","hashOfConfig":"21"},{"size":365,"mtime":1610182242209,"results":"33","hashOfConfig":"21"},{"size":1645,"mtime":1610186654979,"results":"34","hashOfConfig":"21"},{"size":6522,"mtime":1610195254533,"results":"35","hashOfConfig":"21"},{"size":6374,"mtime":1610194729944,"results":"36","hashOfConfig":"21"},{"size":1358,"mtime":1610186720640,"results":"37","hashOfConfig":"21"},{"size":3147,"mtime":1610185672887,"results":"38","hashOfConfig":"21"},{"size":2191,"mtime":1610306232787,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"y3rq28",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\index.js",["88","89","90"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./server/store\";\r\nimport Login from \"./Components/Login/login\";\r\nimport AddAdmin from \"./Forms/Add/AddAdmin/addAdmin\"\r\nimport AddRoute from \"./Forms/Add/AddRoute/addRoute\"\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      {/* <App />*/}\r\n      {/*<Login />*/}\r\n      {/*<AddAdmin />*/}\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n  // If you want to start measuring performance in your app, pass a function\r\n  // to log results (for example: reportWebVitals(console.log))\r\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n  reportWebVitals();\r\n});\r\n",["91","92"],"D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\reportWebVitals.js",[],"D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\App.js",["93","94"],"import \"./App.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ComponentGuard from \"./guards/ComponentGuard\";\r\nimport Home from \"./Components/Home/home\";\r\nimport store from \"./server/store\";\r\nimport Login from \"./Components/Login/login\";\r\nimport AddAdmin from \"./Forms/Add/AddAdmin/addAdmin\";\r\nimport AddCaptain from \"./Forms/Add/AddCaptian/addCaptain\";\r\nimport { connect } from \"react-redux\";\r\nimport ForgetPass from \"./Auth/forgetPassword\";\r\nimport AddRoute from \"./Forms/Add/AddRoute/addRoute\";\r\nimport Nav from \"./Components/navbar/navbar\";\r\nimport VerificationPage from \"./Auth/verification\";\r\nfunction App(props) {\r\n  const { auth, admin, owner } = props;\r\n  console.log(auth);\r\n  if (auth.uid && !auth.emailVerified) {\r\n    return <VerificationPage></VerificationPage>;\r\n  }\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Nav></Nav>\r\n        <Switch>\r\n          <ComponentGuard exact path=\"/\" component={Home} authRules={true} />\r\n          <ComponentGuard\r\n            exact\r\n            path=\"/login\"\r\n            component={Login}\r\n            authRules={!auth.uid}\r\n            redirectPath={\"/\"}\r\n          />\r\n          <ComponentGuard\r\n            exact\r\n            path=\"/forget-password\"\r\n            component={ForgetPass}\r\n            authRules={!auth.uid}\r\n            redirectPath={\"/\"}\r\n          />\r\n          <ComponentGuard\r\n            exact\r\n            path=\"/add-admin\"\r\n            component={AddAdmin}\r\n            authRules={owner}\r\n            redirectPath={\"/\"}\r\n          />\r\n          <ComponentGuard\r\n            exact\r\n            path=\"/add-route\"\r\n            component={AddRoute}\r\n            authRules={owner || admin}\r\n            redirectPath={\"/\"}\r\n          />\r\n\r\n          <ComponentGuard\r\n            exact\r\n            path=\"/add-captain\"\r\n            component={AddCaptain}\r\n            authRules={owner || admin}\r\n            redirectPath={\"/\"}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\nconst mapState = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n\r\n    admin: state.auth.admin,\r\n    owner: state.auth.owner,\r\n  };\r\n};\r\nexport default connect(mapState)(App);\r\n","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\server\\store.js",[],"D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Components\\Login\\login.js",["95"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./login.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { connect } from \"react-redux\";\r\nimport { SignIn } from \"../../server/actions/authActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction BasicTextFields(props) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n      <div className=\"container\">\r\n        <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n          <Grid\r\n            item\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            direction=\"column\"\r\n            spacing=\"6\"\r\n          >\r\n            <Grid item>\r\n              <h1>Login Now</h1>\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                name=\"username\"\r\n                id=\"loginUserName\"\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n                label=\"Email\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                name=\"password\"\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n                id=\"loginPassword\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <a href=\"/forget-password\">Forget Password?</a>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  props.signiIn({\r\n                    email: email,\r\n                    password: password,\r\n                  });\r\n                }}\r\n                color=\"primary\"\r\n                disableElevation\r\n              >\r\n                Login Now\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signiIn: (cred) => {\r\n      dispatch(SignIn(cred));\r\n    },\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.loginerror,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicTextFields);\r\n","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Forms\\Add\\AddAdmin\\addAdmin.js",["96","97","98"],"import * as React from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./addAdmin.css\";\r\nimport swal from \"sweetalert\";\r\nimport config from \"../../../server/config\";\r\nconst firestore = config.firestore();\r\n\r\nconst functions = config.app().functions(\"europe-west3\");\r\nconst addAdmin = functions.httpsCallable(\"addAdmin\");\r\nconst columns = [\r\n  { field: \"id\", headerName: \"ID\", width: 70 },\r\n  { field: \"firstName\", headerName: \"First name\", width: 130 },\r\n  { field: \"lastName\", headerName: \"Last name\", width: 130 },\r\n\r\n  {\r\n    field: \"fullName\",\r\n    headerName: \"Full name\",\r\n    description: \"This column has a value getter and is not sortable.\",\r\n    sortable: false,\r\n    width: 160,\r\n    valueGetter: (params) =>\r\n      `${params.getValue(\"firstName\") || \"\"} ${\r\n        params.getValue(\"lastName\") || \"\"\r\n      }`,\r\n  },\r\n  { field: \"email\", headerName: \"Email\", width: 250 },\r\n];\r\n\r\nconst rows = [\r\n  { id: 1, lastName: \"Snow\", firstName: \"Jon\" },\r\n  { id: 2, lastName: \"Lannister\", firstName: \"Cersei\" },\r\n  { id: 3, lastName: \"Lannister\", firstName: \"Jaime\" },\r\n  { id: 4, lastName: \"Stark\", firstName: \"Arya\" },\r\n  { id: 5, lastName: \"Targaryen\", firstName: \"Daenerys\" },\r\n  { id: 6, lastName: \"Melisandre\", firstName: null },\r\n  { id: 7, lastName: \"Clifford\", firstName: \"Ferrara\" },\r\n  { id: 8, lastName: \"Frances\", firstName: \"Rossini\" },\r\n  { id: 9, lastName: \"Roxie\", firstName: \"Harvey\" },\r\n];\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = React.useState(\"\");\r\n  const [firstName, setFirstName] = React.useState(\"\");\r\n  const [lastName, setLastName] = React.useState(\"\");\r\n  const [adminsList, setAdminsList] = React.useState([]);\r\n  React.useEffect(() => {\r\n    firestore.collection(\"admins\").onSnapshot((snaps) => {\r\n      const admins = snaps.docs.map((doc, index) => {\r\n        return {\r\n          ...doc.data(),\r\n          uid: doc.id,\r\n          id: index + 1,\r\n        };\r\n      });\r\n      console.log(admins);\r\n      setAdminsList(admins);\r\n    });\r\n  }, []);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [openLoading, setOpenLoading] = React.useState(false);\r\n\r\n  const handleCloseLoading = () => {\r\n    setOpenLoading(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpenLoading(!openLoading);\r\n  };\r\n\r\n  const body = (\r\n    <div className=\"container\">\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n          <Grid\r\n            item\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            direction=\"column\"\r\n            spacing=\"1\"\r\n          >\r\n            <Grid xs={12} sm={12} item>\r\n              <TextField\r\n                name=\"firstname\"\r\n                id=\"AddAdminFirstName\"\r\n                label=\"First Name\"\r\n                onChange={(e) => {\r\n                  setFirstName(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                name=\"lastname\"\r\n                id=\"AddAdminLastName\"\r\n                label=\"Last Name\"\r\n                onChange={(e) => {\r\n                  setLastName(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                name=\"username\"\r\n                id=\"AddAdminUserName\"\r\n                label=\"Phone Number\"\r\n                onChange={(e) => {\r\n                  setPhoneNumber(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                name=\"email\"\r\n                id=\"AddAdminUserName\"\r\n                label=\"Email\"\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setOpenLoading(!openLoading);\r\n                  addAdmin({\r\n                    phoneNumber: phoneNumber,\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    email: email,\r\n                  }).then((res) => {\r\n                    setOpenLoading(false);\r\n                    if (res.data.errorInfo) swal(res.data.errorInfo.code);\r\n                    else {\r\n                      console.log(res.data);\r\n                      swal(`admin password is ${res.data.password}`);\r\n                    }\r\n                  });\r\n                }}\r\n                color=\"primary\"\r\n                disableElevation\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n      <Backdrop\r\n        className={classes.backdrop}\r\n        open={openLoading}\r\n        onClick={handleCloseLoading}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        xs={12}\r\n      >\r\n        <div style={{ height: 400, width: \"100%\" }}>\r\n          <br />\r\n          <br />\r\n          <Button\r\n            classname=\"addAdminBTN\"\r\n            variant=\"contained\"\r\n            onClick={handleOpen}\r\n            color=\"primary\"\r\n            disableElevation\r\n          >\r\n            Add New Admin\r\n          </Button>\r\n          <br />\r\n          <br />\r\n          <DataGrid\r\n            rows={adminsList}\r\n            columns={columns}\r\n            pageSize={5}\r\n            checkboxSelection\r\n          />\r\n        </div>\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          {body}\r\n        </Modal>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Forms\\Add\\AddRoute\\addRoute.js",["99","100","101","102","103","104","105","106","107"],"import * as React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport DataList from \"../../../Components/assits/listest\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./addRoute.css\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport swal from \"sweetalert\";\r\nimport config from \"../../../server/config\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddLocationIcon from \"@material-ui/icons/AddLocation\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport StreetviewIcon from \"@material-ui/icons/Streetview\";\r\nconst firestore = config.firestore();\r\n// const functions = config.functions();\r\nconst  functions  = config.app().functions('europe-west3');\r\n\r\nconst addRout =  functions.httpsCallable(\"addRout\");\r\nconst addRoutStation = functions.httpsCallable(\"addRoutStation\");\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#2f253b\",\r\n    color: theme.palette.common.white,\r\n    fontSize: \"17px\",\r\n  },\r\n  body: {\r\n    fontSize: 15,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n}))(TableRow);\r\nconst columns = [\r\n  { field: \"id\", headerName: \"ID\", width: 70 },\r\n  { field: \"startAt\", headerName: \"Start At \", width: 130 },\r\n  { field: \"endAt\", headerName: \"End At \", width: 130 },\r\n  { field: \"actions\", headerName: \"Actions\", width: 330 },\r\n];\r\n// baottot please read this rows from database as routes to show it at table\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [open2, setOpen2] = React.useState(false);\r\n  const [open3, setOpen3] = React.useState(false);\r\n  const [currentrouteID, setCurrentrouteID] = React.useState(\"\");\r\n  const [currentStations, setCurrentStations] = React.useState([]);\r\n  const [openStations, setOpenStations] = React.useState(false);\r\n  const [startAtName, setStartAtName] = React.useState(\"\");\r\n  const [startAtLocation, setStartAtLocation] = React.useState(\"\");\r\n  const [endAtName, setEndAtName] = React.useState(\"\");\r\n  const [endAtLocation, setEndAtLocation] = React.useState(\"\");\r\n  const [finalRoute, setFinalRoute] = React.useState({});\r\n  const [routes, setRoutes] = React.useState([]);\r\n  const [stationName, setStationName] = React.useState(\"\");\r\n  const [stationLocation, setStationLocation] = React.useState(\"\");\r\n\r\n  const [openLoading, setOpenLoading] = React.useState(false);\r\n\r\n  const handleCloseLoading = () => {\r\n    setOpenLoading(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpenLoading(!openLoading);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleOpenstations = () => {\r\n    setOpenStations(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  React.useEffect(() => {\r\n    setFinalRoute({ startAtName, startAtLocation, endAtName, endAtLocation });\r\n  }, [startAtLocation, startAtName, endAtName, endAtLocation]);\r\n  React.useEffect(() => {\r\n    firestore.collection(\"routes\").onSnapshot((snaps) => {\r\n      const routesList = snaps.docs.map((doc, index) => {\r\n        return {\r\n          id: index,\r\n          startAtName: doc.data().startPoint.name,\r\n          endAtName: doc.data().endPoint.name,\r\n          stations: doc.data().stations,\r\n          routeID: doc.id,\r\n        };\r\n      });\r\n      setRoutes(routesList);\r\n    });\r\n  }, []);\r\n  const renderTable = (data) => {\r\n    return (\r\n      <Fragment>\r\n        <Paper style={{ overflowX: \"scroll\" }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell align=\"center\">NO.</StyledTableCell>\r\n                <StyledTableCell align=\"center\">Start Point</StyledTableCell>\r\n                <StyledTableCell align=\"center\">End Point</StyledTableCell>\r\n                <StyledTableCell align=\"center\">Stations</StyledTableCell>\r\n                <StyledTableCell align=\"center\">Add Station</StyledTableCell>\r\n                <StyledTableCell align=\"center\">Delete</StyledTableCell>\r\n\r\n                {/* <StyledTableCell align=\"center\">Enter Time</StyledTableCell> */}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((record, index) => {\r\n                return (\r\n                  <StyledTableRow key={record.routeID}>\r\n                    <StyledTableCell\r\n                      style={{ background: \"#fff\" }}\r\n                      align=\"center\"\r\n                    >\r\n                      {index + 1}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                      {record.startAtName}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      style={{ background: \"#fff\" }}\r\n                      align=\"center\"\r\n                    >\r\n                      {record.endAtName}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      style={{ background: \"#fff\" }}\r\n                      align=\"center\"\r\n                    >\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          setCurrentStations(record.stations);\r\n                          setCurrentrouteID(record.routeID);\r\n\r\n                          setOpen3(true);\r\n                        }}\r\n                      >\r\n                        <StreetviewIcon></StreetviewIcon>\r\n                      </IconButton>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      style={{ background: \"#fff\" }}\r\n                      align=\"center\"\r\n                    >\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          setCurrentrouteID(record.routeID);\r\n                          setOpen2(true);\r\n                        }}\r\n                      >\r\n                        <AddLocationIcon></AddLocationIcon>\r\n                      </IconButton>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      style={{ background: \"#fff\" }}\r\n                      align=\"center\"\r\n                    >\r\n                      <IconButton color=\"secondary\">\r\n                        <DeleteIcon></DeleteIcon>{\" \"}\r\n                      </IconButton>\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const handelAddRoute = (e) => {\r\n    e.preventDefault();\r\n\r\n    setOpenLoading(!openLoading);\r\n\r\n    addRout({ startAtName, startAtLocation, endAtName, endAtLocation }).then(\r\n      (res) => {\r\n        setOpenLoading(false);\r\n        console.log(res.data);\r\n        swal(`Route Created `);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handelAddStations = (pointName, pointLocation, id) => {\r\n    setOpenLoading(true);\r\n    addRoutStation({ pointName, pointLocation, id }).then((res) => {\r\n      setOpenLoading(false);\r\n      console.log(res.data);\r\n      if (res.data === \"updated\") {\r\n        swal(\"Station Added\");\r\n      }\r\n    });\r\n  };\r\n  const body = (\r\n    <div className=\"container\">\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n          <Grid\r\n            item\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            direction=\"column\"\r\n            spacing=\"6\"\r\n          >\r\n            <Grid item>\r\n              <h5> Start At</h5>\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                name=\"startAtName\"\r\n                id=\"AddRouteStartAtName\"\r\n                label=\"Naame\"\r\n                onChange={(e) => {\r\n                  setStartAtName(e.target.value);\r\n                }}\r\n              />\r\n              <TextField\r\n                name=\"startAtLocation\"\r\n                id=\"AddRouteStartAtLocation\"\r\n                label=\"Location\"\r\n                onChange={(e) => {\r\n                  setStartAtLocation(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <h5> End At</h5>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <TextField\r\n                name=\"endAtName\"\r\n                id=\"AddRouteEndAtName\"\r\n                label=\"Name\"\r\n                onChange={(e) => {\r\n                  setEndAtName(e.target.value);\r\n                }}\r\n              />\r\n              <TextField\r\n                name=\"endAtLocation\"\r\n                id=\"AddRouteEndAtLocation\"\r\n                label=\"Location\"\r\n                onChange={(e) => {\r\n                  setEndAtLocation(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disableElevation\r\n                onClick={handelAddRoute}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n      <Backdrop\r\n        className={classes.backdrop}\r\n        open={openLoading}\r\n        onClick={handleCloseLoading}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n\r\n  const bodyForStations = (\r\n    <div className=\"container\">\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n          <Grid\r\n            item\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            direction=\"column\"\r\n            spacing=\"6\"\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disableElevation\r\n              onClick={handelAddStations}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n      <Backdrop\r\n        className={classes.backdrop}\r\n        open={openLoading}\r\n        onClick={handleCloseLoading}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        xs={12}\r\n      >\r\n        <div style={{ height: 400, width: \"100%\" }}>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Button\r\n            classname=\"addAdminBTN\"\r\n            variant=\"contained\"\r\n            onClick={handleOpen}\r\n            color=\"primary\"\r\n            disableElevation\r\n          >\r\n            Add New Route\r\n          </Button>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          {/* <DataList\r\n            datatoshow={routes}\r\n            columns={columns}\r\n            addStation={handelAddStations}\r\n            pageSize={5}\r\n            checkboxSelection\r\n          /> */}\r\n          {renderTable(routes)}\r\n        </div>\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          {body}\r\n        </Modal>\r\n\r\n        <Modal\r\n          open={openStations}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          {bodyForStations}\r\n        </Modal>\r\n      </Grid>\r\n      {/* <Modal\r\n        open={open2}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <div className=\"container\" key={currentrouteID}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n              <Grid\r\n                item\r\n                container\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                direction=\"column\"\r\n              >\r\n                <TextField\r\n                  label=\"Station Name\"\r\n                  onChange={(e) => {\r\n                    setStationName(e.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  label=\"Station location\"\r\n                  onChange={(e) => {\r\n                    setStationLocation(e.target.value);\r\n                  }}\r\n                />\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disableElevation\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setOpenLoading(!openLoading);\r\n\r\n                    handelAddStations(\r\n                      stationName,\r\n                      stationLocation,\r\n                      currentrouteID\r\n                    );\r\n                  }}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </div>\r\n      </Modal> */}\r\n      <Dialog open={open2} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Add Station</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            label=\"Station Name\"\r\n            onChange={(e) => {\r\n              setStationName(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Station location\"\r\n            onChange={(e) => {\r\n              setStationLocation(e.target.value);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setCurrentrouteID(\"\");\r\n              setOpen2(false);\r\n            }}\r\n            color=\"secondary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setOpenLoading(true);\r\n\r\n              handelAddStations(stationName, stationLocation, currentrouteID);\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog open={open3} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Stations</DialogTitle>\r\n        <DialogContent>\r\n          <Paper style={{ overflowX: \"scroll\" }}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>Station Name</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Remove</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {currentStations.map((record) => {\r\n                  return (\r\n                    <StyledTableRow key={record.stationID}>\r\n                      <StyledTableCell\r\n                        style={{ background: \"#fff\" }}\r\n                        align=\"center\"\r\n                      >\r\n                        {record.pointName}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        align=\"center\"\r\n                      >\r\n                        <IconButton color=\"secondary\">\r\n                          <DeleteIcon></DeleteIcon>\r\n                        </IconButton>\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </Paper>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setCurrentrouteID(\"\");\r\n              setCurrentStations([]);\r\n              setOpen3(false);\r\n            }}\r\n            color=\"secondary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Components\\Home\\home.js",[],"D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Forms\\Add\\AddCaptian\\addCaptain.js",["108","109","110","111","112","113","114","115","116","117","118","119"],"D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\guards\\ComponentGuard.js",[],"D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Components\\navbar\\navbar.js",["120","121","122","123"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../server/actions/authActions\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction Nav(props) {\r\n  const { auth, admin, owner, SignOut } = props;\r\n  return (\r\n    <nav>\r\n\r\n      <div className=\"nav-wrapper\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          GO SAWA\r\n        </Link>\r\n        <ul id=\"nav-mobile\" className=\"right \">\r\n          {owner ? (\r\n            <li>\r\n              <Link to=\"/add-admin\">Add Admin</Link>\r\n            </li>\r\n          ) : null}\r\n\r\n          {owner || admin ? (\r\n            <li>\r\n              <Link to=\"/add-route\">Add Route</Link>\r\n            </li>\r\n\r\n          ) : null}\r\n\r\n          {owner || admin ? (\r\n            <li>\r\n              <Link to=\"/add-captain\">Add Captain</Link>\r\n            </li>\r\n\r\n          ) : null}\r\n\r\n          {auth.uid ? (\r\n            <li>\r\n              <Link to=\"/#\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  SignOut();\r\n                }}\r\n              >\r\n                Logout\r\n              </Link>\r\n            </li>\r\n          ) : (\r\n              <li>\r\n                <Link to=\"/login\">Login</Link>\r\n              </li>\r\n            )}\r\n        </ul>\r\n      </div>\r\n\r\n    </nav>\r\n  );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    SignOut: (id) => dispatch(signOut(id)),\r\n    // search: data => {\r\n    //   dispatch(saveSearchStudents(data));\r\n    // },\r\n  };\r\n};\r\nconst mapState = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n\r\n    owner: state.auth.owner,\r\n    admin: state.auth.admin,\r\n  };\r\n};\r\nexport default connect(mapState, mapDispatchToProps)(Nav);\r\n","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\server\\config.js",[],"D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\server\\reducers\\rootReducer.js",[],"D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\server\\actions\\authActions.js",["124"],"import config from \"../config\";\r\nconst firebase2 = config.auth();\r\n\r\nexport const SignIn = (cred) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(cred.email, cred.password)\r\n      .then(() => {\r\n        firebase2.onAuthStateChanged((user) => {\r\n          if (user) {\r\n            user.getIdTokenResult().then((token) => {\r\n              // console.log(token.claims);\r\n              const owner = token.claims.owner;\r\n              const admin = token.claims.admin;\r\n\r\n              firestore\r\n                .collection(\"admins\")\r\n                .doc(user.uid)\r\n                .get()\r\n                .then((snap) => {\r\n                  dispatch({\r\n                    type: \"LOGIN_SUCCESS\",\r\n                    owner: owner,\r\n                    admin: admin,\r\n                    profile: snap.data(),\r\n                  });\r\n                });\r\n            });\r\n          }\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n/////////////////////////////////////////////////\r\nexport const signOut = (uid) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"LOGOUT_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch({ type: \"LOGOUT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Components\\assits\\listest.js",["125","126","127","128","129","130","131","132","133","134","135","136","137"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport swal from \"sweetalert\";\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    minWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n\r\n    backgroundColor: theme.palette.background.paper,\r\n\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nexport default function CheckboxList(datatoshow) {\r\n  const [dataToShow, setDataToShow] = React.useState([]);\r\n  const [currentStations, setCurrentStations] = React.useState([]);\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([0]);\r\n  const [stationName, setStationName] = React.useState(\"\");\r\n  const [stationLocation, setStationLocation] = React.useState(\"\");\r\n\r\n  /*MOdal and loading*/\r\n  const [openStations, setOpenStations] = React.useState(false);\r\n  const [openLoading, setOpenLoading] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setDataToShow(datatoshow.datatoshow);\r\n  });\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleCloseLoading = () => {\r\n    setOpenLoading(false);\r\n  };\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handelOpenModal = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const handelAddStations = (e) => {\r\n    e.preventDefault();\r\n    setOpenLoading(!openLoading);\r\n    console.log(stationName, stationLocation);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {dataToShow.map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n\r\n        return (\r\n          <Grid>\r\n            <ListItem\r\n              key={value}\r\n              role={undefined}\r\n              dense\r\n              button\r\n              onClick={handleToggle(value)}\r\n            >\r\n              <ListItemText\r\n                id={labelId}\r\n                primary={`NO. : ${value.id + 1} | Started At : ${\r\n                  value.startAtName\r\n                } | Ended At : ${value.endAtName}`}\r\n              />\r\n\r\n              <ListItemText\r\n                primary={`Stations : [ ${value.stations.map(\r\n                  (state) => state.pointName + \"  ,  \"\r\n                )} ]`}\r\n              />\r\n\r\n              <ListItemSecondaryAction>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  onClick={handleOpen}\r\n                  color=\"primary\"\r\n                  disableElevation\r\n                >\r\n                  Add New Stations\r\n                </Button>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n\r\n            <Modal\r\n              open={open}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"simple-modal-title\"\r\n              aria-describedby=\"simple-modal-description\"\r\n            >\r\n              <div className=\"container\" key={value.id}>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n                    <Grid\r\n                      item\r\n                      container\r\n                      justify=\"center\"\r\n                      alignItems=\"center\"\r\n                      direction=\"column\"\r\n                    >\r\n                      <TextField\r\n                        label=\"Station Name\"\r\n                        onChange={(e) => {\r\n                          setStationName(e.target.value);\r\n                        }}\r\n                      />\r\n                      <TextField\r\n                        label=\"Station location\"\r\n                        onChange={(e) => {\r\n                          setStationLocation(e.target.value);\r\n                        }}\r\n                      />\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disableElevation\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          setOpenLoading(!openLoading);\r\n\r\n                          datatoshow.addStation(\r\n                            stationName,\r\n                            stationLocation,\r\n                            value.routeID\r\n                          );\r\n                        }}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </Grid>\r\n                  </form>\r\n                </Grid>\r\n                <Backdrop\r\n                  className={classes.backdrop}\r\n                  open={openLoading}\r\n                  onClick={handleCloseLoading}\r\n                >\r\n                  <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n              </div>\r\n            </Modal>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Components\\assits\\captainLists.js",["138","139","140","141","142","143","144","145","146","147","148","149","150"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport swal from \"sweetalert\";\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    minWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n\r\n    backgroundColor: theme.palette.background.paper,\r\n\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nexport default function CheckboxList(datatoshow) {\r\n  const [dataToShow, setDataToShow] = React.useState([]);\r\n  const [currentStations, setCurrentStations] = React.useState([]);\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([0]);\r\n  const [stationName, setStationName] = React.useState(\"\");\r\n  const [stationLocation, setStationLocation] = React.useState(\"\");\r\n\r\n  /*MOdal and loading*/\r\n  const [openStations, setOpenStations] = React.useState(false);\r\n  const [openLoading, setOpenLoading] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setDataToShow(datatoshow.datatoshow);\r\n  });\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleCloseLoading = () => {\r\n    setOpenLoading(false);\r\n  };\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handelOpenModal = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const handelAddStations = (e) => {\r\n    e.preventDefault();\r\n    setOpenLoading(!openLoading);\r\n    console.log(stationName, stationLocation);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {dataToShow.map((value) => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n\r\n        return (\r\n          <Grid>\r\n            <ListItem\r\n              key={value}\r\n              role={undefined}\r\n              dense\r\n              button\r\n              onClick={handleToggle(value)}\r\n            >\r\n              <ListItemText\r\n                id={labelId}\r\n                primary={`Captain Name : ${value.id + 1} | Captain Name: ${\r\n                  value.name\r\n                } | Captain Phone  : ${value.phone}`}\r\n              />\r\n\r\n              <ListItemText\r\n                primary={`Captain Rides : [ ${value.rides.map(\r\n                  (state) => state + \"  ,  \"\r\n                )} ]`}\r\n              />\r\n\r\n              <ListItemSecondaryAction>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  onClick={handleOpen}\r\n                  color=\"primary\"\r\n                  disableElevation\r\n                >\r\n                  Add New Ride\r\n                </Button>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n\r\n            <Modal\r\n              open={open}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"simple-modal-title\"\r\n              aria-describedby=\"simple-modal-description\"\r\n            >\r\n              <div className=\"container\" key={value.id}>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n                    <Grid\r\n                      item\r\n                      container\r\n                      justify=\"center\"\r\n                      alignItems=\"center\"\r\n                      direction=\"column\"\r\n                    >\r\n                      <TextField\r\n                        label=\"Station Name\"\r\n                        onChange={(e) => {\r\n                          setStationName(e.target.value);\r\n                        }}\r\n                      />\r\n                      <TextField\r\n                        label=\"Station location\"\r\n                        onChange={(e) => {\r\n                          setStationLocation(e.target.value);\r\n                        }}\r\n                      />\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disableElevation\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          setOpenLoading(!openLoading);\r\n\r\n                          console.log(stationName, stationLocation);\r\n                        }}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </Grid>\r\n                  </form>\r\n                </Grid>\r\n                <Backdrop\r\n                  className={classes.backdrop}\r\n                  open={openLoading}\r\n                  onClick={handleCloseLoading}\r\n                >\r\n                  <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n              </div>\r\n            </Modal>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n","D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\server\\reducers\\authReducer.js",[],"D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Auth\\forgetPassword.js",[],"D:\\Work\\Go sawa\\New folder\\GoSawa\\src\\Auth\\verification.js",[],{"ruleId":"151","severity":1,"message":"152","line":7,"column":8,"nodeType":"153","messageId":"154","endLine":7,"endColumn":13},{"ruleId":"151","severity":1,"message":"155","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":16},{"ruleId":"151","severity":1,"message":"156","line":9,"column":8,"nodeType":"153","messageId":"154","endLine":9,"endColumn":16},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"151","severity":1,"message":"161","line":2,"column":25,"nodeType":"153","messageId":"154","endLine":2,"endColumn":30},{"ruleId":"151","severity":1,"message":"162","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":13},{"ruleId":"151","severity":1,"message":"163","line":20,"column":9,"nodeType":"153","messageId":"154","endLine":20,"endColumn":16},{"ruleId":"151","severity":1,"message":"164","line":36,"column":7,"nodeType":"153","messageId":"154","endLine":36,"endColumn":11},{"ruleId":"151","severity":1,"message":"165","line":81,"column":10,"nodeType":"153","messageId":"154","endLine":81,"endColumn":20},{"ruleId":"151","severity":1,"message":"166","line":114,"column":9,"nodeType":"153","messageId":"154","endLine":114,"endColumn":21},{"ruleId":"151","severity":1,"message":"167","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":18},{"ruleId":"151","severity":1,"message":"168","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":16},{"ruleId":"151","severity":1,"message":"169","line":24,"column":8,"nodeType":"153","messageId":"154","endLine":24,"endColumn":25},{"ruleId":"151","severity":1,"message":"170","line":33,"column":7,"nodeType":"153","messageId":"154","endLine":33,"endColumn":8},{"ruleId":"151","severity":1,"message":"171","line":55,"column":7,"nodeType":"153","messageId":"154","endLine":55,"endColumn":14},{"ruleId":"151","severity":1,"message":"165","line":96,"column":10,"nodeType":"153","messageId":"154","endLine":96,"endColumn":20},{"ruleId":"151","severity":1,"message":"172","line":107,"column":10,"nodeType":"153","messageId":"154","endLine":107,"endColumn":20},{"ruleId":"151","severity":1,"message":"166","line":117,"column":9,"nodeType":"153","messageId":"154","endLine":117,"endColumn":21},{"ruleId":"151","severity":1,"message":"173","line":125,"column":9,"nodeType":"153","messageId":"154","endLine":125,"endColumn":27},{"ruleId":"151","severity":1,"message":"167","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":18},{"ruleId":"151","severity":1,"message":"174","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":13},{"ruleId":"151","severity":1,"message":"175","line":12,"column":8,"nodeType":"153","messageId":"154","endLine":12,"endColumn":22},{"ruleId":"151","severity":1,"message":"176","line":18,"column":8,"nodeType":"153","messageId":"154","endLine":18,"endColumn":21},{"ruleId":"151","severity":1,"message":"177","line":29,"column":3,"nodeType":"153","messageId":"154","endLine":29,"endColumn":17},{"ruleId":"151","severity":1,"message":"178","line":32,"column":8,"nodeType":"153","messageId":"154","endLine":32,"endColumn":18},{"ruleId":"151","severity":1,"message":"179","line":36,"column":10,"nodeType":"153","messageId":"154","endLine":36,"endColumn":18},{"ruleId":"151","severity":1,"message":"180","line":129,"column":10,"nodeType":"153","messageId":"154","endLine":129,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":163,"column":1,"nodeType":"183","messageId":"184","endLine":170,"endColumn":2},{"ruleId":"151","severity":1,"message":"185","line":186,"column":22,"nodeType":"153","messageId":"154","endLine":186,"endColumn":35},{"ruleId":"151","severity":1,"message":"186","line":191,"column":9,"nodeType":"153","messageId":"154","endLine":191,"endColumn":34},{"ruleId":"151","severity":1,"message":"166","line":203,"column":9,"nodeType":"153","messageId":"154","endLine":203,"endColumn":21},{"ruleId":"151","severity":1,"message":"187","line":6,"column":20,"nodeType":"153","messageId":"154","endLine":6,"endColumn":26},{"ruleId":"151","severity":1,"message":"188","line":7,"column":3,"nodeType":"153","messageId":"154","endLine":7,"endColumn":9},{"ruleId":"151","severity":1,"message":"161","line":8,"column":3,"nodeType":"153","messageId":"154","endLine":8,"endColumn":8},{"ruleId":"151","severity":1,"message":"189","line":11,"column":7,"nodeType":"153","messageId":"154","endLine":11,"endColumn":16},{"ruleId":"151","severity":1,"message":"190","line":43,"column":11,"nodeType":"153","messageId":"154","endLine":43,"endColumn":20},{"ruleId":"151","severity":1,"message":"191","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":20},{"ruleId":"151","severity":1,"message":"192","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":16},{"ruleId":"151","severity":1,"message":"193","line":9,"column":8,"nodeType":"153","messageId":"154","endLine":9,"endColumn":18},{"ruleId":"151","severity":1,"message":"194","line":10,"column":8,"nodeType":"153","messageId":"154","endLine":10,"endColumn":19},{"ruleId":"151","severity":1,"message":"195","line":17,"column":8,"nodeType":"153","messageId":"154","endLine":17,"endColumn":12},{"ruleId":"151","severity":1,"message":"196","line":54,"column":10,"nodeType":"153","messageId":"154","endLine":54,"endColumn":25},{"ruleId":"151","severity":1,"message":"197","line":54,"column":27,"nodeType":"153","messageId":"154","endLine":54,"endColumn":45},{"ruleId":"151","severity":1,"message":"165","line":55,"column":10,"nodeType":"153","messageId":"154","endLine":55,"endColumn":20},{"ruleId":"151","severity":1,"message":"198","line":62,"column":10,"nodeType":"153","messageId":"154","endLine":62,"endColumn":22},{"ruleId":"151","severity":1,"message":"199","line":62,"column":24,"nodeType":"153","messageId":"154","endLine":62,"endColumn":39},{"ruleId":"200","severity":1,"message":"201","line":66,"column":3,"nodeType":"202","endLine":66,"endColumn":18,"suggestions":"203"},{"ruleId":"151","severity":1,"message":"204","line":92,"column":9,"nodeType":"153","messageId":"154","endLine":92,"endColumn":24},{"ruleId":"151","severity":1,"message":"205","line":95,"column":9,"nodeType":"153","messageId":"154","endLine":95,"endColumn":26},{"ruleId":"151","severity":1,"message":"191","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":20},{"ruleId":"151","severity":1,"message":"192","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":16},{"ruleId":"151","severity":1,"message":"193","line":9,"column":8,"nodeType":"153","messageId":"154","endLine":9,"endColumn":18},{"ruleId":"151","severity":1,"message":"194","line":10,"column":8,"nodeType":"153","messageId":"154","endLine":10,"endColumn":19},{"ruleId":"151","severity":1,"message":"195","line":17,"column":8,"nodeType":"153","messageId":"154","endLine":17,"endColumn":12},{"ruleId":"151","severity":1,"message":"196","line":54,"column":10,"nodeType":"153","messageId":"154","endLine":54,"endColumn":25},{"ruleId":"151","severity":1,"message":"197","line":54,"column":27,"nodeType":"153","messageId":"154","endLine":54,"endColumn":45},{"ruleId":"151","severity":1,"message":"165","line":55,"column":10,"nodeType":"153","messageId":"154","endLine":55,"endColumn":20},{"ruleId":"151","severity":1,"message":"198","line":62,"column":10,"nodeType":"153","messageId":"154","endLine":62,"endColumn":22},{"ruleId":"151","severity":1,"message":"199","line":62,"column":24,"nodeType":"153","messageId":"154","endLine":62,"endColumn":39},{"ruleId":"200","severity":1,"message":"201","line":66,"column":3,"nodeType":"202","endLine":66,"endColumn":18,"suggestions":"206"},{"ruleId":"151","severity":1,"message":"204","line":92,"column":9,"nodeType":"153","messageId":"154","endLine":92,"endColumn":24},{"ruleId":"151","severity":1,"message":"205","line":95,"column":9,"nodeType":"153","messageId":"154","endLine":95,"endColumn":26},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'AddAdmin' is defined but never used.","'AddRoute' is defined but never used.","no-native-reassign",["207"],"no-negated-in-lhs",["208"],"'Route' is defined but never used.","'store' is defined but never used.","'classes' is assigned a value but never used.","'rows' is assigned a value but never used.","'modalStyle' is assigned a value but never used.","'handleToggle' is assigned a value but never used.","'DataGrid' is defined but never used.","'DataList' is defined but never used.","'DialogContentText' is defined but never used.","'t' is assigned a value but never used.","'columns' is assigned a value but never used.","'finalRoute' is assigned a value but never used.","'handleOpenstations' is assigned a value but never used.","'Modal' is defined but never used.","'FormHelperText' is defined but never used.","'MuiPhoneInput' is defined but never used.","'DateTimePicker' is defined but never used.","'PhoneInput' is defined but never used.","'isFuture' is defined but never used.","'getModalStyle' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'setnewCaptain' is assigned a value but never used.","'useDefaultPhoneInputProps' is assigned a value but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'useStyles' is assigned a value but never used.","'firestore' is assigned a value but never used.","'ListItemIcon' is defined but never used.","'Checkbox' is defined but never used.","'IconButton' is defined but never used.","'CommentIcon' is defined but never used.","'swal' is defined but never used.","'currentStations' is assigned a value but never used.","'setCurrentStations' is assigned a value but never used.","'openStations' is assigned a value but never used.","'setOpenStations' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDataToShow'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [datatoshow.datatoshow] as a second argument to the useEffect Hook.","MemberExpression",["209"],"'handelOpenModal' is assigned a value but never used.","'handelAddStations' is assigned a value but never used.",["210"],"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"211","fix":"213"},"Add dependencies array: [datatoshow.datatoshow]",{"range":"214","text":"215"},{"range":"216","text":"215"},[2312,2312],", [datatoshow.datatoshow]",[2312,2312]]