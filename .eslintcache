[{"D:\\Work\\Go sawa\\GoSawa\\src\\index.js":"1","D:\\Work\\Go sawa\\GoSawa\\src\\reportWebVitals.js":"2","D:\\Work\\Go sawa\\GoSawa\\src\\App.js":"3","D:\\Work\\Go sawa\\GoSawa\\src\\server\\store.js":"4","D:\\Work\\Go sawa\\GoSawa\\src\\server\\reducers\\rootReducer.js":"5","D:\\Work\\Go sawa\\GoSawa\\src\\server\\config.js":"6","D:\\Work\\Go sawa\\GoSawa\\src\\server\\reducers\\authReducer.js":"7","D:\\Work\\Go sawa\\GoSawa\\src\\Components\\Login\\login.js":"8","D:\\Work\\Go sawa\\GoSawa\\src\\Forms\\Add\\AddAdmin\\addAdmin.js":"9","D:\\Work\\Go sawa\\GoSawa\\src\\Forms\\Add\\AddRoute\\addRoute.js":"10","D:\\Work\\Go sawa\\GoSawa\\src\\Components\\Home\\home.js":"11","D:\\Work\\Go sawa\\GoSawa\\src\\guards\\ComponentGuard.js":"12","D:\\Work\\Go sawa\\GoSawa\\src\\Components\\navbar\\navbar.js":"13","D:\\Work\\Go sawa\\GoSawa\\src\\server\\actions\\authActions.js":"14","C:\\Work\\GoSawa\\gosawa\\src\\index.js":"15","C:\\Work\\GoSawa\\gosawa\\src\\reportWebVitals.js":"16","C:\\Work\\GoSawa\\gosawa\\src\\App.js":"17","C:\\Work\\GoSawa\\gosawa\\src\\server\\store.js":"18","C:\\Work\\GoSawa\\gosawa\\src\\Components\\Login\\login.js":"19","C:\\Work\\GoSawa\\gosawa\\src\\Forms\\Add\\AddRoute\\addRoute.js":"20","C:\\Work\\GoSawa\\gosawa\\src\\Forms\\Add\\AddAdmin\\addAdmin.js":"21","C:\\Work\\GoSawa\\gosawa\\src\\server\\config.js":"22","C:\\Work\\GoSawa\\gosawa\\src\\guards\\ComponentGuard.js":"23","C:\\Work\\GoSawa\\gosawa\\src\\Components\\Home\\home.js":"24","C:\\Work\\GoSawa\\gosawa\\src\\Components\\navbar\\navbar.js":"25","C:\\Work\\GoSawa\\gosawa\\src\\server\\reducers\\rootReducer.js":"26","C:\\Work\\GoSawa\\gosawa\\src\\server\\actions\\authActions.js":"27","C:\\Work\\GoSawa\\gosawa\\src\\server\\reducers\\authReducer.js":"28","C:\\Work\\GoSawa\\gosawa\\src\\Components\\assits\\listest.js":"29","C:\\Work\\GoSawa\\gosawa\\src\\Forms\\Add\\AddCaptian\\addCaptain.js":"30","C:\\Work\\GoSawa\\gosawa\\src\\Components\\assits\\captainLists.js":"31"},{"size":857,"mtime":1608902124654,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1608391155497,"results":"34","hashOfConfig":"33"},{"size":1566,"mtime":1608915902722,"results":"35","hashOfConfig":"33"},{"size":1181,"mtime":1608393166606,"results":"36","hashOfConfig":"33"},{"size":365,"mtime":1608912725781,"results":"37","hashOfConfig":"33"},{"size":808,"mtime":1608392468058,"results":"38","hashOfConfig":"33"},{"size":1350,"mtime":1608916107292,"results":"39","hashOfConfig":"33"},{"size":2612,"mtime":1608914036479,"results":"40","hashOfConfig":"33"},{"size":5973,"mtime":1608922298478,"results":"41","hashOfConfig":"33"},{"size":4275,"mtime":1608839668048,"results":"42","hashOfConfig":"33"},{"size":216,"mtime":1608902657211,"results":"43","hashOfConfig":"33"},{"size":557,"mtime":1608839668049,"results":"44","hashOfConfig":"33"},{"size":1753,"mtime":1608917881524,"results":"45","hashOfConfig":"33"},{"size":1663,"mtime":1608916058091,"results":"46","hashOfConfig":"33"},{"size":833,"mtime":1608989605792,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1608642840979,"results":"49","hashOfConfig":"48"},{"size":1737,"mtime":1610127135064,"results":"50","hashOfConfig":"48"},{"size":1141,"mtime":1608642840984,"results":"51","hashOfConfig":"48"},{"size":2616,"mtime":1608993182324,"results":"52","hashOfConfig":"48"},{"size":9966,"mtime":1610116315005,"results":"53","hashOfConfig":"48"},{"size":6610,"mtime":1608993893979,"results":"54","hashOfConfig":"48"},{"size":783,"mtime":1608642840980,"results":"55","hashOfConfig":"48"},{"size":557,"mtime":1608641826579,"results":"56","hashOfConfig":"48"},{"size":200,"mtime":1608989605786,"results":"57","hashOfConfig":"48"},{"size":2016,"mtime":1610126988784,"results":"58","hashOfConfig":"48"},{"size":351,"mtime":1608989605797,"results":"59","hashOfConfig":"48"},{"size":1606,"mtime":1608989605794,"results":"60","hashOfConfig":"48"},{"size":1287,"mtime":1608989605796,"results":"61","hashOfConfig":"48"},{"size":7303,"mtime":1610134076949,"results":"62","hashOfConfig":"48"},{"size":10718,"mtime":1610134141182,"results":"63","hashOfConfig":"48"},{"size":7306,"mtime":1610134064611,"results":"64","hashOfConfig":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},"6meqco",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},"1u3edb7",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"99"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"99"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"99"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"99"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"99"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"99"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"99"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"99"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},"D:\\Work\\Go sawa\\GoSawa\\src\\index.js",["141","142","143"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./server/store\";\r\nimport Login from \"./Components/Login/login\";\r\nimport AddAdmin from \"./Forms/Add/AddAdmin/addAdmin\"\r\nimport AddRoute from \"./Forms/Add/AddRoute/addRoute\"\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      {/* <App />*/}\r\n      {/*<Login />*/}\r\n      {/*<AddAdmin />*/}\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n  // If you want to start measuring performance in your app, pass a function\r\n  // to log results (for example: reportWebVitals(console.log))\r\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n  reportWebVitals();\r\n});\r\n",["144","145"],"D:\\Work\\Go sawa\\GoSawa\\src\\reportWebVitals.js",[],"D:\\Work\\Go sawa\\GoSawa\\src\\App.js",["146","147","148"],"D:\\Work\\Go sawa\\GoSawa\\src\\server\\store.js",[],"D:\\Work\\Go sawa\\GoSawa\\src\\server\\reducers\\rootReducer.js",[],"D:\\Work\\Go sawa\\GoSawa\\src\\server\\config.js",[],"D:\\Work\\Go sawa\\GoSawa\\src\\server\\reducers\\authReducer.js",[],"D:\\Work\\Go sawa\\GoSawa\\src\\Components\\Login\\login.js",["149"],"D:\\Work\\Go sawa\\GoSawa\\src\\Forms\\Add\\AddAdmin\\addAdmin.js",["150","151"],"D:\\Work\\Go sawa\\GoSawa\\src\\Forms\\Add\\AddRoute\\addRoute.js",["152","153"],"import * as React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport \"./addRoute.css\"\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'startAt', headerName: 'Start At ', width: 130 },\r\n    { field: 'endAt', headerName: 'End At ', width: 130 },\r\n    { field: 'actions', headerName: 'Actions', width: 330 },\r\n\r\n\r\n];\r\n\r\nconst rows = [\r\n    { id: 1, endAt: 'Snow', startAd: 'Jon', },\r\n    { id: 2, endAt: 'Lannister', startAd: 'Cersei', },\r\n    { id: 3, endAt: 'Lannister', startAd: 'Jaime', },\r\n    { id: 4, endAt: 'Stark', startAd: 'Arya', },\r\n    { id: 5, endAt: 'Targaryen', startAd: 'Daenerys', },\r\n    { id: 6, endAt: 'Melisandre', startAd: null, },\r\n    { id: 7, endAt: 'Clifford', startAd: 'Ferrara', },\r\n    { id: 8, endAt: 'Frances', startAd: 'Rossini', },\r\n    { id: 9, endAt: 'Roxie', startAd: 'Harvey', },\r\n];\r\n\r\n\r\n\r\n\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const body = (\r\n        <div className=\"container\"  >\r\n            <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n\r\n            >\r\n                <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n                    <Grid item container\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        direction=\"column\"\r\n                        spacing=\"6\"\r\n\r\n                    >\r\n                        <Grid item   >\r\n                            <TextField name=\"startAt\" id=\"AddRouteStartAt\" label=\"Start At\" />\r\n                        </Grid>\r\n                        <Grid item   >\r\n                            <TextField name=\"endAt\" id=\"AddRouteEndAt\" label=\"End At\" />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item  >\r\n\r\n                            <Button variant=\"contained\" color=\"primary\" disableElevation>\r\n                                Submit\r\n                        </Button>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                xs={12}\r\n            >\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                    <Button classname=\"addAdminBTN\" variant=\"contained\" onClick={handleOpen} color=\"primary\" disableElevation>\r\n                        Add New Route\r\n                    </Button>\r\n                    <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n                </div>\r\n                <Modal\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                >\r\n                    {body}\r\n                </Modal>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","D:\\Work\\Go sawa\\GoSawa\\src\\Components\\Home\\home.js",[],"D:\\Work\\Go sawa\\GoSawa\\src\\guards\\ComponentGuard.js",[],"D:\\Work\\Go sawa\\GoSawa\\src\\Components\\navbar\\navbar.js",["154"],"D:\\Work\\Go sawa\\GoSawa\\src\\server\\actions\\authActions.js",["155"],"C:\\Work\\GoSawa\\gosawa\\src\\index.js",["156","157","158"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./server/store\";\nimport Login from \"./Components/Login/login\";\nimport AddAdmin from \"./Forms/Add/AddAdmin/addAdmin\"\nimport AddRoute from \"./Forms/Add/AddRoute/addRoute\"\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      {/* <App />*/}\n      {/*<Login />*/}\n      {/*<AddAdmin />*/}\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n  // If you want to start measuring performance in your app, pass a function\n  // to log results (for example: reportWebVitals(console.log))\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n  reportWebVitals();\n});\n",["159","160"],"C:\\Work\\GoSawa\\gosawa\\src\\reportWebVitals.js",[],"C:\\Work\\GoSawa\\gosawa\\src\\App.js",["161","162"],"\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ComponentGuard from \"./guards/ComponentGuard\";\nimport Home from \"./Components/Home/home\";\nimport store from \"./server/store\";\nimport Login from \"./Components/Login/login\";\nimport AddAdmin from \"./Forms/Add/AddAdmin/addAdmin\";\nimport AddCaptain from \"./Forms/Add/AddCaptian/addCaptain\"\nimport { connect } from \"react-redux\";\n\n\nimport AddRoute from \"./Forms/Add/AddRoute/addRoute\";\nimport Nav from \"./Components/navbar/navbar\";\nfunction App(props) {\n  const { auth, admin, owner } = props;\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Nav></Nav>\n        <Switch>\n          <ComponentGuard exact path=\"/\" component={Home} authRules={true} />\n          <ComponentGuard\n            exact\n            path=\"/login\"\n            component={Login}\n            authRules={!auth.uid}\n            redirectPath={\"/\"}\n          />\n          <ComponentGuard\n            exact\n            path=\"/add-admin\"\n            component={AddAdmin}\n            authRules={owner}\n            redirectPath={\"/\"}\n          />\n          <ComponentGuard\n            exact\n            path=\"/add-route\"\n            component={AddRoute}\n            authRules={owner || admin}\n            redirectPath={\"/\"}\n          />\n\n\n          <ComponentGuard\n            exact\n            path=\"/add-captain\"\n            component={AddCaptain}\n            authRules={owner || admin}\n            redirectPath={\"/\"}\n          />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\nconst mapState = (state) => {\n  return {\n    auth: state.firebase.auth,\n\n    admin: state.auth.admin,\n    owner: state.auth.owner,\n  };\n};\nexport default connect(mapState)(App);\n","C:\\Work\\GoSawa\\gosawa\\src\\server\\store.js",[],"C:\\Work\\GoSawa\\gosawa\\src\\Components\\Login\\login.js",["163"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./login.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { connect } from \"react-redux\";\r\nimport { SignIn } from \"../../server/actions/authActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction BasicTextFields(props) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  return (\r\n\r\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n      <div className=\"container\">\r\n        <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n          <Grid\r\n            item\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            direction=\"column\"\r\n            spacing=\"6\"\r\n          >\r\n            <Grid item>\r\n              <h1>Login Now</h1>\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                name=\"username\"\r\n                id=\"loginUserName\"\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n                label=\"Email\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                name=\"password\"\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n                id=\"loginPassword\"\r\n                label=\"Password\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  props.signiIn({\r\n                    email: email,\r\n                    password: password,\r\n                  });\r\n                }}\r\n                color=\"primary\"\r\n                disableElevation\r\n              >\r\n                Login Now\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Grid>\r\n\r\n  );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signiIn: (cred) => {\r\n      dispatch(SignIn(cred));\r\n    },\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.loginerror,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicTextFields);\r\n","C:\\Work\\GoSawa\\gosawa\\src\\Forms\\Add\\AddRoute\\addRoute.js",["164","165","166","167"],"import * as React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport DataList from \"../../../Components/assits/listest\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport \"./addRoute.css\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport swal from \"sweetalert\";\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'startAt', headerName: 'Start At ', width: 130 },\r\n    { field: 'endAt', headerName: 'End At ', width: 130 },\r\n    { field: 'actions', headerName: 'Actions', width: 330 },\r\n\r\n\r\n];\r\n// baottot please read this rows from database as routes to show it at table\r\nconst rows = [\r\n    { id: 1, endAt: 'Snow', startAd: 'Jon', stations: [\"giza\", \"haram\", \"faisal\", \"giza\", \"haram\", \"faisal\", \"giza\", \"haram\", \"faisal\", \"giza\", \"haram\", \"faisal\", \"giza\", \"haram\", \"faisal\", \"giza\", \"haram\", \"faisal\"] },\r\n    { id: 2, endAt: 'Lannister', startAd: 'Cersei', stations: [\"giza\", \"haram\", \"faisal\"] },\r\n    { id: 3, endAt: 'Lannister', startAd: 'Jaime', stations: [\"giza\", \"haram\", \"faisal\"] },\r\n    { id: 4, endAt: 'Stark', startAd: 'Arya', stations: [\"giza\", \"haram\", \"faisal\"] },\r\n    { id: 5, endAt: 'Targaryen', startAd: 'Daenerys', stations: [\"giza\", \"haram\", \"faisal\"] },\r\n    { id: 6, endAt: 'Melisandre', startAd: null, stations: [\"giza\", \"haram\", \"faisal\"] },\r\n    { id: 7, endAt: 'Clifford', startAd: 'Ferrara', stations: [\"giza\", \"haram\", \"faisal\"] },\r\n    { id: 8, endAt: 'Frances', startAd: 'Rossini', stations: [\"giza\", \"haram\", \"faisal\"] },\r\n    { id: 9, endAt: 'Roxie', startAd: 'Harvey', stations: [\"giza\", \"haram\", \"faisal\"] },\r\n];\r\n\r\n\r\n\r\n\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openStations, setOpenStations] = React.useState(false);\r\n    const [startAtName, setStartAtName] = React.useState(\"\")\r\n    const [startAtLocation, setStartAtLocation] = React.useState(\"\")\r\n    const [endAtName, setEndAtName] = React.useState(\"\")\r\n    const [endAtLocation, setEndAtLocation] = React.useState(\"\")\r\n    const [finalRoute, setFinalRoute] = React.useState({})\r\n\r\n    const [openLoading, setOpenLoading] = React.useState(false);\r\n\r\n\r\n    const handleCloseLoading = () => {\r\n        setOpenLoading(false);\r\n    };\r\n    const handleToggle = () => {\r\n        setOpenLoading(!openLoading);\r\n    };\r\n\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleOpenstations = () => {\r\n        setOpenStations(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handelAddRoute = (e) => {\r\n        e.preventDefault();\r\n\r\n        setOpenLoading(!openLoading);\r\n        setFinalRoute(\r\n            {\r\n                ...finalRoute,\r\n                startAtName,\r\n                startAtLocation,\r\n                endAtName,\r\n                endAtLocation\r\n            })\r\n        console.log(finalRoute)\r\n        //when u finish the request \r\n        let batotFInish = false\r\n        if (batotFInish) {\r\n            setOpenLoading(false);\r\n            swal(`Route Created ${finalRoute}`);\r\n        }\r\n    }\r\n\r\n    const handelAddStations = (e) => {\r\n        e.preventDefault();\r\n        setOpenLoading(!openLoading);\r\n    }\r\n    const body = (\r\n        <div className=\"container\"  >\r\n            <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n\r\n            >\r\n                <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n                    <Grid item container\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        direction=\"column\"\r\n                        spacing=\"6\"\r\n\r\n                    >\r\n                        <Grid item >\r\n                            <h5> Start At</h5>\r\n                        </Grid>\r\n                        <Grid item   >\r\n                            <TextField\r\n                                name=\"startAtName\"\r\n                                id=\"AddRouteStartAtName\"\r\n                                label=\"Naame\"\r\n                                onChange={(e) => {\r\n                                    setStartAtName(e.target.value);\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                name=\"startAtLocation\"\r\n                                id=\"AddRouteStartAtLocation\"\r\n                                label=\"Location\"\r\n                                onChange={(e) => {\r\n                                    setStartAtLocation(e.target.value);\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <h5> End At</h5>\r\n                        </Grid>\r\n\r\n                        <Grid item   >\r\n                            <TextField\r\n                                name=\"endAtName\"\r\n                                id=\"AddRouteEndAtName\"\r\n                                label=\"Name\"\r\n                                onChange={(e) => {\r\n                                    setEndAtName(e.target.value);\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                name=\"endAtLocation\"\r\n                                id=\"AddRouteEndAtLocation\"\r\n                                label=\"Location\"\r\n                                onChange={(e) => {\r\n                                    setEndAtLocation(e.target.value);\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item  >\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disableElevation\r\n                                onClick={handelAddRoute}\r\n                            >\r\n                                Submit\r\n                        </Button>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n            <Backdrop className={classes.backdrop} open={openLoading} onClick={handleCloseLoading}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n\r\n    const bodyForStations = (\r\n        <div className=\"container\"  >\r\n            <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n\r\n            >\r\n                <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n                    <Grid item container\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        direction=\"column\"\r\n                        spacing=\"6\"\r\n\r\n                    >\r\n\r\n\r\n\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disableElevation\r\n                            onClick={handelAddStations}\r\n                        >\r\n                            Submit\r\n                    </Button>\r\n\r\n\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n            <Backdrop className={classes.backdrop} open={openLoading} onClick={handleCloseLoading}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                xs={12}\r\n            >\r\n                <div style={{ height: 400, width: '100%' }}>\r\n                    <Button classname=\"addAdminBTN\" variant=\"contained\" onClick={handleOpen} color=\"primary\" disableElevation>\r\n                        Add New Route\r\n                    </Button>\r\n\r\n\r\n                    <DataList datatoshow={rows} columns={columns} pageSize={5} checkboxSelection />\r\n\r\n                </div>\r\n                <Modal\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                >\r\n                    {body}\r\n                </Modal>\r\n\r\n\r\n\r\n                <Modal\r\n                    open={openStations}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                >\r\n                    {bodyForStations}\r\n                </Modal>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","C:\\Work\\GoSawa\\gosawa\\src\\Forms\\Add\\AddAdmin\\addAdmin.js",["168","169"],"import * as React from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./addAdmin.css\";\r\nimport swal from \"sweetalert\";\r\nimport config from \"../../../server/config\";\r\nconst functions = config.functions();\r\nconst addAdmin = functions.httpsCallable(\"addAdmin\");\r\nconst columns = [\r\n  { field: \"id\", headerName: \"ID\", width: 70 },\r\n  { field: \"firstName\", headerName: \"First name\", width: 130 },\r\n  { field: \"lastName\", headerName: \"Last name\", width: 130 },\r\n\r\n  {\r\n    field: \"fullName\",\r\n    headerName: \"Full name\",\r\n    description: \"This column has a value getter and is not sortable.\",\r\n    sortable: false,\r\n    width: 160,\r\n    valueGetter: (params) =>\r\n      `${params.getValue(\"firstName\") || \"\"} ${params.getValue(\"lastName\") || \"\"\r\n      }`,\r\n  },\r\n];\r\n\r\nconst rows = [\r\n  { id: 1, lastName: \"Snow\", firstName: \"Jon\" },\r\n  { id: 2, lastName: \"Lannister\", firstName: \"Cersei\" },\r\n  { id: 3, lastName: \"Lannister\", firstName: \"Jaime\" },\r\n  { id: 4, lastName: \"Stark\", firstName: \"Arya\" },\r\n  { id: 5, lastName: \"Targaryen\", firstName: \"Daenerys\" },\r\n  { id: 6, lastName: \"Melisandre\", firstName: null },\r\n  { id: 7, lastName: \"Clifford\", firstName: \"Ferrara\" },\r\n  { id: 8, lastName: \"Frances\", firstName: \"Rossini\" },\r\n  { id: 9, lastName: \"Roxie\", firstName: \"Harvey\" },\r\n];\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = React.useState(\"\");\r\n  const [firstName, setFirstName] = React.useState(\"\");\r\n  const [lastName, setLastName] = React.useState(\"\");\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [openLoading, setOpenLoading] = React.useState(false);\r\n\r\n\r\n  const handleCloseLoading = () => {\r\n    setOpenLoading(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpenLoading(!openLoading);\r\n  };\r\n\r\n\r\n  const body = (\r\n    <div className=\"container\">\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n          <Grid\r\n            item\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            direction=\"column\"\r\n            spacing=\"1\"\r\n\r\n\r\n          >\r\n            <Grid xs={12} sm={12} item>\r\n              <TextField\r\n                name=\"firstname\"\r\n                id=\"AddAdminFirstName\"\r\n                label=\"First Name\"\r\n                onChange={(e) => {\r\n                  setFirstName(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                name=\"lastname\"\r\n                id=\"AddAdminLastName\"\r\n                label=\"Last Name\"\r\n                onChange={(e) => {\r\n                  setLastName(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                name=\"username\"\r\n                id=\"AddAdminUserName\"\r\n                label=\"Phone Number\"\r\n                onChange={(e) => {\r\n                  setPhoneNumber(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                name=\"email\"\r\n                id=\"AddAdminUserName\"\r\n                label=\"Email\"\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={(e) => {\r\n\r\n                  e.preventDefault();\r\n                  setOpenLoading(!openLoading);\r\n                  addAdmin({\r\n                    phoneNumber: phoneNumber,\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    email: email,\r\n                  }).then((res) => {\r\n                    setOpenLoading(false);\r\n                    swal(`admin password is ${res.data.password}`);\r\n                  });\r\n                }}\r\n                color=\"primary\"\r\n                disableElevation\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n      <Backdrop className={classes.backdrop} open={openLoading} onClick={handleCloseLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        xs={12}\r\n      >\r\n        <div style={{ height: 400, width: \"100%\" }}>\r\n          <Button\r\n            classname=\"addAdminBTN\"\r\n            variant=\"contained\"\r\n            onClick={handleOpen}\r\n            color=\"primary\"\r\n            disableElevation\r\n          >\r\n            Add New Admin\r\n          </Button>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={5}\r\n            checkboxSelection\r\n          />\r\n        </div>\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          {body}\r\n        </Modal>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Work\\GoSawa\\gosawa\\src\\server\\config.js",[],"C:\\Work\\GoSawa\\gosawa\\src\\guards\\ComponentGuard.js",[],"C:\\Work\\GoSawa\\gosawa\\src\\Components\\Home\\home.js",[],"C:\\Work\\GoSawa\\gosawa\\src\\Components\\navbar\\navbar.js",["170","171","172","173"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../server/actions/authActions\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction Nav(props) {\r\n  const { auth, admin, owner, SignOut } = props;\r\n  return (\r\n    <nav>\r\n\r\n      <div className=\"nav-wrapper\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          GO SAWA\r\n        </Link>\r\n        <ul id=\"nav-mobile\" className=\"right \">\r\n          {owner ? (\r\n            <li>\r\n              <Link to=\"/add-admin\">Add Admin</Link>\r\n            </li>\r\n          ) : null}\r\n\r\n          {owner || admin ? (\r\n            <li>\r\n              <Link to=\"/add-route\">Add Route</Link>\r\n            </li>\r\n\r\n          ) : null}\r\n\r\n          {owner || admin ? (\r\n            <li>\r\n              <Link to=\"/add-captain\">Add Captain</Link>\r\n            </li>\r\n\r\n          ) : null}\r\n\r\n          {auth.uid ? (\r\n            <li>\r\n              <Link to=\"/#\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  SignOut();\r\n                }}\r\n              >\r\n                Logout\r\n              </Link>\r\n            </li>\r\n          ) : (\r\n              <li>\r\n                <Link to=\"/login\">Login</Link>\r\n              </li>\r\n            )}\r\n        </ul>\r\n      </div>\r\n\r\n    </nav>\r\n  );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    SignOut: (id) => dispatch(signOut(id)),\r\n    // search: data => {\r\n    //   dispatch(saveSearchStudents(data));\r\n    // },\r\n  };\r\n};\r\nconst mapState = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n\r\n    owner: state.auth.owner,\r\n    admin: state.auth.admin,\r\n  };\r\n};\r\nexport default connect(mapState, mapDispatchToProps)(Nav);\r\n","C:\\Work\\GoSawa\\gosawa\\src\\server\\reducers\\rootReducer.js",[],"C:\\Work\\GoSawa\\gosawa\\src\\server\\actions\\authActions.js",["174"],"import config from \"../config\";\nconst firebase2 = config.auth();\n\nexport const SignIn = (cred) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(cred.email, cred.password)\n      .then(() => {\n        firebase2.onAuthStateChanged((user) => {\n          if (user) {\n            user.getIdTokenResult().then((token) => {\n              // console.log(token.claims);\n              const owner = token.claims.owner;\n              const admin = token.claims.admin;\n\n              firestore\n                .collection(\"admins\")\n                .doc(user.uid)\n                .get()\n                .then((snap) => {\n                  dispatch({\n                    type: \"LOGIN_SUCCESS\",\n                    owner: owner,\n                    admin: admin,\n                    profile: snap.data(),\n                  });\n                });\n            });\n          }\n        });\n      })\n      .catch((err) => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n/////////////////////////////////////////////////\nexport const signOut = (uid) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"LOGOUT_SUCCESS\" });\n        return window.location.assign(\"/\");\n      })\n      .catch((err) => {\n        dispatch({ type: \"LOGOUT_ERROR\", err });\n      });\n  };\n};\n","C:\\Work\\GoSawa\\gosawa\\src\\server\\reducers\\authReducer.js",[],"C:\\Work\\GoSawa\\gosawa\\src\\Components\\assits\\listest.js",["175","176","177","178","179","180","181","182","183","184","185"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport swal from \"sweetalert\";\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        minWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n\r\n        backgroundColor: theme.palette.background.paper,\r\n\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default function CheckboxList(datatoshow) {\r\n    const [dataToShow, setDataToShow] = React.useState([])\r\n    const [currentStations, setCurrentStations] = React.useState([])\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const classes = useStyles();\r\n    const [checked, setChecked] = React.useState([0]);\r\n    const [stationName, setStationName] = React.useState(\"\");\r\n    const [stationLocation, setStationLocation] = React.useState(\"\");\r\n\r\n\r\n\r\n\r\n    /*MOdal and loading*/\r\n    const [openStations, setOpenStations] = React.useState(false);\r\n    const [openLoading, setOpenLoading] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n\r\n    React.useEffect(() => {\r\n        setDataToShow(datatoshow.datatoshow)\r\n\r\n    })\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleCloseLoading = () => {\r\n        setOpenLoading(false);\r\n    };\r\n    const handleToggle = (value) => () => {\r\n\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n\r\n    const handelOpenModal = (e) => {\r\n        e.preventDefault();\r\n\r\n    }\r\n    const handelAddStations = (e) => {\r\n        e.preventDefault();\r\n        setOpenLoading(!openLoading);\r\n        console.log(stationName, stationLocation)\r\n    }\r\n\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            {dataToShow.map((value) => {\r\n                const labelId = `checkbox-list-label-${value}`;\r\n\r\n                return (\r\n\r\n                    <Grid >\r\n\r\n\r\n                        <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    edge=\"start\"\r\n                                    checked={checked.indexOf(value) !== -1}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText id={labelId} primary={`Line number : ${value.id + 1} | Started At : ${value.startAd} | Ended At : ${value.endAt}`} />\r\n\r\n                            <ListItemText primary={`Stations : [ ${value.stations.map(state => state + \"  ,  \")} ]`} />\r\n\r\n\r\n\r\n                            <ListItemSecondaryAction>\r\n                                <Button variant=\"contained\" onClick={handleOpen} color=\"primary\" disableElevation>\r\n                                    Add New Stations\r\n                                </Button>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n\r\n                        <Modal\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"simple-modal-title\"\r\n                            aria-describedby=\"simple-modal-description\"\r\n                        >\r\n\r\n                            <div className=\"container\" key={value.id}>\r\n                                <Grid container\r\n                                    direction=\"column\"\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\"\r\n\r\n                                >\r\n                                    <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n                                        <Grid item container\r\n                                            justify=\"center\"\r\n                                            alignItems=\"center\"\r\n                                            direction=\"column\"\r\n\r\n                                        >\r\n\r\n                                            <TextField label=\"Station Name\" onChange={(e) => { setStationName(e.target.value) }} />\r\n                                            <TextField label=\"Station location\" onChange={(e) => { setStationLocation(e.target.value) }} />\r\n\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                disableElevation\r\n                                                onClick={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    setOpenLoading(!openLoading);\r\n\r\n                                                    console.log(stationName, stationLocation)\r\n                                                }}\r\n                                            >\r\n                                                Add\r\n                                         </Button>\r\n\r\n                                        </Grid>\r\n                                    </form>\r\n                                </Grid>\r\n                                <Backdrop className={classes.backdrop} open={openLoading} onClick={handleCloseLoading}>\r\n                                    <CircularProgress color=\"inherit\" />\r\n                                </Backdrop>\r\n                            </div>\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </Grid>\r\n                );\r\n            })}\r\n        </List>\r\n    );\r\n}\r\n","C:\\Work\\GoSawa\\gosawa\\src\\Forms\\Add\\AddCaptian\\addCaptain.js",["186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"import * as React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport ImageUploader from 'react-images-upload';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport swal from \"sweetalert\";\r\nimport DataList from \"../../../Components/assits/captainLists\";\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'name', headerName: 'Capain Name ', width: 130 },\r\n    { field: 'phone', headerName: 'Captain Phone', width: 130 },\r\n    { field: 'actions', headerName: 'Actions', width: 330 },\r\n\r\n\r\n];\r\n// baottot please read this rows from database as Captains to show it at table\r\nconst rows = [\r\n    { id: 1, name: 'Snow', phone: '01153354849', rides: [\"giza\", \"haram\", \"faisal\", \"giza\", \"haram\", \"faisal\", \"giza\", \"haram\", \"faisal\", \"giza\", \"haram\", \"faisal\", \"giza\", \"haram\", \"faisal\", \"giza\", \"haram\", \"faisal\"] },\r\n    { id: 2, name: 'Lannister', phone: '01153354849', rides: [\"giza\", \"haram\", \"faisal\"] },\r\n    { id: 3, name: 'Lannister', phone: '01153354849', rides: [\"giza\", \"haram\", \"faisal\"] },\r\n    { id: 4, name: 'Stark', phone: '01153354849', rides: [\"giza\", \"haram\", \"faisal\"] },\r\n    { id: 5, name: 'Targaryen', phone: '01153354849', rides: [\"giza\", \"haram\", \"faisal\"] },\r\n    { id: 6, name: 'Melisandre', phone: null, rides: [\"giza\", \"haram\", \"faisal\"] },\r\n    { id: 7, name: 'Clifford', phone: '01153354849', rides: [\"giza\", \"haram\", \"faisal\"] },\r\n    { id: 8, name: 'Frances', phone: '01153354849', rides: [\"giza\", \"haram\", \"faisal\"] },\r\n    { id: 9, name: 'Roxie', phone: '01153354849', rides: [\"giza\", \"haram\", \"faisal\"] },\r\n];\r\n\r\n\r\n\r\n\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        maxWidth: 420,\r\n        minWidth: 220,\r\n        color: \"#fff\",\r\n\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    }, paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [car, setCar] = React.useState('');\r\n    const [name, setName] = React.useState(\"\")\r\n    const [phone, setPhone] = React.useState(\"\")\r\n    const [idNumber, setIdNumber] = React.useState(\"\")\r\n    const [licencesfront, setLicencesFront] = React.useState(\"\")\r\n    const [licencesBack, setLicencesBack] = React.useState(\"\")\r\n    const [idFront, setIdFront] = React.useState(\"\")\r\n    const [idBack, setIdBack] = React.useState(\"\")\r\n    const [fesh, setfesh] = React.useState(\"\")\r\n\r\n\r\n    const [newCaptain, setnewCaptain] = React.useState({})\r\n\r\n    const [openLoading, setOpenLoading] = React.useState(false);\r\n\r\n\r\n    const handleCloseLoading = () => {\r\n        setOpenLoading(false);\r\n    };\r\n    const handleToggle = () => {\r\n        setOpenLoading(!openLoading);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleChangeCar = (event) => {\r\n        setCar(event.target.value);\r\n    };\r\n    const frontIDUploader = (picture) => {\r\n        setIdFront(picture)\r\n        setOpenLoading(!openLoading);\r\n        console.log(picture)\r\n\r\n        //lama t5alas el sho8l sha8al el case de\r\n        let WorkDone = false\r\n        if (WorkDone == true) {\r\n            setOpenLoading(false);\r\n        }\r\n\r\n    }\r\n    const backIDUploader = (picture) => {\r\n        setIdBack(picture)\r\n        setOpenLoading(!openLoading);\r\n        console.log(picture)\r\n\r\n\r\n        //lama t5alas el sho8l sha8al el case de\r\n        let WorkDone = false\r\n        if (WorkDone == true) {\r\n            setOpenLoading(false);\r\n        }\r\n    }\r\n    const licencesfrontUploader = (picture) => {\r\n        setLicencesFront(picture)\r\n        setOpenLoading(!openLoading);\r\n        console.log(picture)\r\n\r\n\r\n        //lama t5alas el sho8l sha8al el case de\r\n        let WorkDone = false\r\n        if (WorkDone == true) {\r\n            setOpenLoading(false);\r\n        }\r\n    }\r\n    const licencesBackUploader = (picture) => {\r\n        setLicencesBack(picture)\r\n        setOpenLoading(!openLoading);\r\n        console.log(picture)\r\n\r\n\r\n        //lama t5alas el sho8l sha8al el case de\r\n        let WorkDone = false\r\n        if (WorkDone == true) {\r\n            setOpenLoading(false);\r\n        }\r\n    }\r\n    const feshUploader = (picture) => {\r\n        setfesh(picture)\r\n        setOpenLoading(!openLoading);\r\n        console.log(picture)\r\n\r\n\r\n        //lama t5alas el sho8l sha8al el case de\r\n        let WorkDone = false\r\n        if (WorkDone == true) {\r\n            setOpenLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handelAddCaptain = (e) => {\r\n        e.preventDefault();\r\n        setOpenLoading(!openLoading);\r\n        setnewCaptain(\r\n            {\r\n                ...newCaptain,\r\n                name,\r\n                phone,\r\n                idNumber,\r\n                licencesfront,\r\n                licencesBack,\r\n                idFront,\r\n                idBack,\r\n                fesh\r\n            })\r\n        console.log(newCaptain)\r\n        //when u finish the request \r\n        let batotFInish = false\r\n        if (batotFInish) {\r\n            setOpenLoading(false);\r\n            swal(`Captain Created ${newCaptain.name} `);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <form className={classes.root, \"add-captain-form\"} noValidate autoComplete=\"off\" style={{}}>\r\n                <h1>Add New Captain</h1>\r\n                <FormControl className={classes.formControl}>\r\n                    <TextField id=\"name\" label=\"Captain Name\" variant=\"outlined\" />\r\n                </FormControl>\r\n\r\n                <FormControl className={classes.formControl}>\r\n                    <TextField id=\"Phone\" label=\"Captain Phone\" variant=\"outlined\" />\r\n                </FormControl>\r\n\r\n                <FormControl className={classes.formControl}>\r\n                    <TextField id=\"idNumber\" label=\"Captain ID number\" variant=\"outlined\" />\r\n                </FormControl>\r\n\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Select The Car</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={car}\r\n                        onChange={handleChangeCar}\r\n                    >\r\n                        <MenuItem value={\"بط528\"}>كيا سيراتو ب ط 528</MenuItem>\r\n                        <MenuItem value={\"سض558\"}>بي واي دي اف 3 س ض 558</MenuItem>\r\n                        <MenuItem value={\"صع515\"}>شيفيروليه اوبترا ص ع 515</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <ImageUploader\r\n                    withIcon={true}\r\n                    buttonText='ID Front Face'\r\n                    label=\"Upload ID Front IMG\"\r\n                    onChange={frontIDUploader}\r\n                    imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\r\n                    maxFileSize={5242880}\r\n                    fileContainerStyle={{ background: \"rgba(255,255,255,0.3)\" }}\r\n\r\n                />\r\n\r\n\r\n\r\n\r\n                <ImageUploader\r\n                    withIcon={true}\r\n                    label=\"Upload ID Back IMG\"\r\n                    buttonText='ID Front Face'\r\n                    onChange={backIDUploader}\r\n                    imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\r\n                    maxFileSize={5242880}\r\n                    fileContainerStyle={{ background: \"rgba(255,255,255,0.3)\" }}\r\n                />\r\n\r\n\r\n\r\n\r\n                <ImageUploader\r\n                    withIcon={true}\r\n                    label=\"Upload Licences Front IMG\"\r\n                    buttonText='ID Front Face'\r\n                    onChange={licencesfrontUploader}\r\n                    imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\r\n                    maxFileSize={5242880}\r\n                    fileContainerStyle={{ background: \"rgba(255,255,255,0.3)\" }}\r\n                />\r\n\r\n\r\n\r\n\r\n                <ImageUploader\r\n                    withIcon={true}\r\n                    label=\"Upload Licences Back IMG\"\r\n                    buttonText='ID Front Face'\r\n                    onChange={feshUploader}\r\n                    imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\r\n                    maxFileSize={5242880}\r\n                    fileContainerStyle={{ background: \"rgba(255,255,255,0.3)\" }}\r\n                />\r\n\r\n\r\n\r\n\r\n                <ImageUploader\r\n                    withIcon={true}\r\n                    label=\"Upload Criminal newspaper IMG\"\r\n                    buttonText='ID Front Face'\r\n                    onChange={licencesBackUploader}\r\n                    imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\r\n                    maxFileSize={5242880}\r\n                    fileContainerStyle={{ background: \"rgba(255,255,255,0.3)\" }}\r\n                />\r\n\r\n\r\n                <Button classname=\"addAdminBTN\" variant=\"contained\" onClick={handelAddCaptain} color=\"primary\" disableElevation>\r\n                    Add New Captain\r\n                    </Button>\r\n            </form>\r\n            <div style={{ height: 400, width: '100%' }}>\r\n                <DataList datatoshow={rows} columns={columns} pageSize={5} checkboxSelection />\r\n            </div>\r\n            <Backdrop className={classes.backdrop} open={openLoading} onClick={handleCloseLoading}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n\r\n        </div>\r\n    );\r\n}","C:\\Work\\GoSawa\\gosawa\\src\\Components\\assits\\captainLists.js",["201","202","203","204","205","206","207","208","209","210","211"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport swal from \"sweetalert\";\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        minWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n\r\n        backgroundColor: theme.palette.background.paper,\r\n\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default function CheckboxList(datatoshow) {\r\n    const [dataToShow, setDataToShow] = React.useState([])\r\n    const [currentStations, setCurrentStations] = React.useState([])\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const classes = useStyles();\r\n    const [checked, setChecked] = React.useState([0]);\r\n    const [stationName, setStationName] = React.useState(\"\");\r\n    const [stationLocation, setStationLocation] = React.useState(\"\");\r\n\r\n\r\n\r\n\r\n    /*MOdal and loading*/\r\n    const [openStations, setOpenStations] = React.useState(false);\r\n    const [openLoading, setOpenLoading] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n\r\n    React.useEffect(() => {\r\n        setDataToShow(datatoshow.datatoshow)\r\n\r\n    })\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleCloseLoading = () => {\r\n        setOpenLoading(false);\r\n    };\r\n    const handleToggle = (value) => () => {\r\n\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n\r\n    const handelOpenModal = (e) => {\r\n        e.preventDefault();\r\n\r\n    }\r\n    const handelAddStations = (e) => {\r\n        e.preventDefault();\r\n        setOpenLoading(!openLoading);\r\n        console.log(stationName, stationLocation)\r\n    }\r\n\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            {dataToShow.map((value) => {\r\n                const labelId = `checkbox-list-label-${value}`;\r\n\r\n                return (\r\n\r\n                    <Grid >\r\n\r\n\r\n                        <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    edge=\"start\"\r\n                                    checked={checked.indexOf(value) !== -1}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText id={labelId} primary={`Captain Name : ${value.id + 1} | Captain Name: ${value.name} | Captain Phone  : ${value.phone}`} />\r\n\r\n                            <ListItemText primary={`Captain Rides : [ ${value.rides.map(state => state + \"  ,  \")} ]`} />\r\n\r\n\r\n\r\n                            <ListItemSecondaryAction>\r\n                                <Button variant=\"contained\" onClick={handleOpen} color=\"primary\" disableElevation>\r\n                                    Add New Ride\r\n                                </Button>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n\r\n                        <Modal\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"simple-modal-title\"\r\n                            aria-describedby=\"simple-modal-description\"\r\n                        >\r\n\r\n                            <div className=\"container\" key={value.id}>\r\n                                <Grid container\r\n                                    direction=\"column\"\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\"\r\n\r\n                                >\r\n                                    <form className=\"login-form\" noValidate autoComplete=\"off\">\r\n                                        <Grid item container\r\n                                            justify=\"center\"\r\n                                            alignItems=\"center\"\r\n                                            direction=\"column\"\r\n\r\n                                        >\r\n\r\n                                            <TextField label=\"Station Name\" onChange={(e) => { setStationName(e.target.value) }} />\r\n                                            <TextField label=\"Station location\" onChange={(e) => { setStationLocation(e.target.value) }} />\r\n\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                disableElevation\r\n                                                onClick={(e) => {\r\n                                                    e.preventDefault();\r\n                                                    setOpenLoading(!openLoading);\r\n\r\n                                                    console.log(stationName, stationLocation)\r\n                                                }}\r\n                                            >\r\n                                                Add\r\n                                         </Button>\r\n\r\n                                        </Grid>\r\n                                    </form>\r\n                                </Grid>\r\n                                <Backdrop className={classes.backdrop} open={openLoading} onClick={handleCloseLoading}>\r\n                                    <CircularProgress color=\"inherit\" />\r\n                                </Backdrop>\r\n                            </div>\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </Grid>\r\n                );\r\n            })}\r\n        </List>\r\n    );\r\n}\r\n",{"ruleId":"212","severity":1,"message":"213","line":7,"column":8,"nodeType":"214","messageId":"215","endLine":7,"endColumn":13},{"ruleId":"212","severity":1,"message":"216","line":8,"column":8,"nodeType":"214","messageId":"215","endLine":8,"endColumn":16},{"ruleId":"212","severity":1,"message":"217","line":9,"column":8,"nodeType":"214","messageId":"215","endLine":9,"endColumn":16},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"212","severity":1,"message":"222","line":1,"column":8,"nodeType":"214","messageId":"215","endLine":1,"endColumn":12},{"ruleId":"212","severity":1,"message":"223","line":3,"column":25,"nodeType":"214","messageId":"215","endLine":3,"endColumn":30},{"ruleId":"212","severity":1,"message":"224","line":6,"column":8,"nodeType":"214","messageId":"215","endLine":6,"endColumn":13},{"ruleId":"212","severity":1,"message":"225","line":20,"column":9,"nodeType":"214","messageId":"215","endLine":20,"endColumn":16},{"ruleId":"212","severity":1,"message":"225","line":70,"column":9,"nodeType":"214","messageId":"215","endLine":70,"endColumn":16},{"ruleId":"212","severity":1,"message":"226","line":72,"column":10,"nodeType":"214","messageId":"215","endLine":72,"endColumn":20},{"ruleId":"212","severity":1,"message":"225","line":61,"column":11,"nodeType":"214","messageId":"215","endLine":61,"endColumn":18},{"ruleId":"212","severity":1,"message":"226","line":63,"column":12,"nodeType":"214","messageId":"215","endLine":63,"endColumn":22},{"ruleId":"212","severity":1,"message":"227","line":5,"column":7,"nodeType":"214","messageId":"215","endLine":5,"endColumn":16},{"ruleId":"212","severity":1,"message":"228","line":43,"column":11,"nodeType":"214","messageId":"215","endLine":43,"endColumn":20},{"ruleId":"212","severity":1,"message":"213","line":7,"column":8,"nodeType":"214","messageId":"215","endLine":7,"endColumn":13},{"ruleId":"212","severity":1,"message":"216","line":8,"column":8,"nodeType":"214","messageId":"215","endLine":8,"endColumn":16},{"ruleId":"212","severity":1,"message":"217","line":9,"column":8,"nodeType":"214","messageId":"215","endLine":9,"endColumn":16},{"ruleId":"218","replacedBy":"229"},{"ruleId":"220","replacedBy":"230"},{"ruleId":"212","severity":1,"message":"223","line":3,"column":25,"nodeType":"214","messageId":"215","endLine":3,"endColumn":30},{"ruleId":"212","severity":1,"message":"224","line":6,"column":8,"nodeType":"214","messageId":"215","endLine":6,"endColumn":13},{"ruleId":"212","severity":1,"message":"225","line":20,"column":9,"nodeType":"214","messageId":"215","endLine":20,"endColumn":16},{"ruleId":"212","severity":1,"message":"231","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":18},{"ruleId":"212","severity":1,"message":"226","line":72,"column":12,"nodeType":"214","messageId":"215","endLine":72,"endColumn":22},{"ruleId":"212","severity":1,"message":"232","line":87,"column":11,"nodeType":"214","messageId":"215","endLine":87,"endColumn":23},{"ruleId":"212","severity":1,"message":"233","line":96,"column":11,"nodeType":"214","messageId":"215","endLine":96,"endColumn":29},{"ruleId":"212","severity":1,"message":"226","line":77,"column":10,"nodeType":"214","messageId":"215","endLine":77,"endColumn":20},{"ruleId":"212","severity":1,"message":"232","line":97,"column":9,"nodeType":"214","messageId":"215","endLine":97,"endColumn":21},{"ruleId":"212","severity":1,"message":"234","line":6,"column":20,"nodeType":"214","messageId":"215","endLine":6,"endColumn":26},{"ruleId":"212","severity":1,"message":"235","line":7,"column":3,"nodeType":"214","messageId":"215","endLine":7,"endColumn":9},{"ruleId":"212","severity":1,"message":"223","line":8,"column":3,"nodeType":"214","messageId":"215","endLine":8,"endColumn":8},{"ruleId":"212","severity":1,"message":"227","line":11,"column":7,"nodeType":"214","messageId":"215","endLine":11,"endColumn":16},{"ruleId":"212","severity":1,"message":"228","line":43,"column":11,"nodeType":"214","messageId":"215","endLine":43,"endColumn":20},{"ruleId":"212","severity":1,"message":"236","line":9,"column":8,"nodeType":"214","messageId":"215","endLine":9,"endColumn":18},{"ruleId":"212","severity":1,"message":"237","line":10,"column":8,"nodeType":"214","messageId":"215","endLine":10,"endColumn":19},{"ruleId":"212","severity":1,"message":"238","line":17,"column":8,"nodeType":"214","messageId":"215","endLine":17,"endColumn":12},{"ruleId":"212","severity":1,"message":"239","line":54,"column":12,"nodeType":"214","messageId":"215","endLine":54,"endColumn":27},{"ruleId":"212","severity":1,"message":"240","line":54,"column":29,"nodeType":"214","messageId":"215","endLine":54,"endColumn":47},{"ruleId":"212","severity":1,"message":"226","line":55,"column":12,"nodeType":"214","messageId":"215","endLine":55,"endColumn":22},{"ruleId":"212","severity":1,"message":"241","line":65,"column":12,"nodeType":"214","messageId":"215","endLine":65,"endColumn":24},{"ruleId":"212","severity":1,"message":"242","line":65,"column":26,"nodeType":"214","messageId":"215","endLine":65,"endColumn":41},{"ruleId":"243","severity":1,"message":"244","line":70,"column":5,"nodeType":"245","endLine":70,"endColumn":20,"suggestions":"246"},{"ruleId":"212","severity":1,"message":"247","line":99,"column":11,"nodeType":"214","messageId":"215","endLine":99,"endColumn":26},{"ruleId":"212","severity":1,"message":"248","line":103,"column":11,"nodeType":"214","messageId":"215","endLine":103,"endColumn":28},{"ruleId":"212","severity":1,"message":"231","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":18},{"ruleId":"212","severity":1,"message":"249","line":5,"column":8,"nodeType":"214","messageId":"215","endLine":5,"endColumn":13},{"ruleId":"212","severity":1,"message":"250","line":7,"column":8,"nodeType":"214","messageId":"215","endLine":7,"endColumn":12},{"ruleId":"212","severity":1,"message":"251","line":11,"column":8,"nodeType":"214","messageId":"215","endLine":11,"endColumn":22},{"ruleId":"212","severity":1,"message":"252","line":48,"column":10,"nodeType":"214","messageId":"215","endLine":48,"endColumn":23},{"ruleId":"212","severity":1,"message":"253","line":88,"column":18,"nodeType":"214","messageId":"215","endLine":88,"endColumn":25},{"ruleId":"212","severity":1,"message":"254","line":89,"column":19,"nodeType":"214","messageId":"215","endLine":89,"endColumn":27},{"ruleId":"212","severity":1,"message":"255","line":90,"column":22,"nodeType":"214","messageId":"215","endLine":90,"endColumn":33},{"ruleId":"212","severity":1,"message":"232","line":106,"column":11,"nodeType":"214","messageId":"215","endLine":106,"endColumn":23},{"ruleId":"256","severity":1,"message":"257","line":125,"column":22,"nodeType":"258","messageId":"259","endLine":125,"endColumn":24},{"ruleId":"256","severity":1,"message":"257","line":138,"column":22,"nodeType":"258","messageId":"259","endLine":138,"endColumn":24},{"ruleId":"256","severity":1,"message":"257","line":150,"column":22,"nodeType":"258","messageId":"259","endLine":150,"endColumn":24},{"ruleId":"256","severity":1,"message":"257","line":162,"column":22,"nodeType":"258","messageId":"259","endLine":162,"endColumn":24},{"ruleId":"256","severity":1,"message":"257","line":174,"column":22,"nodeType":"258","messageId":"259","endLine":174,"endColumn":24},{"ruleId":"260","severity":1,"message":"261","line":206,"column":42,"nodeType":"262","messageId":"263","endLine":206,"endColumn":43},{"ruleId":"212","severity":1,"message":"236","line":9,"column":8,"nodeType":"214","messageId":"215","endLine":9,"endColumn":18},{"ruleId":"212","severity":1,"message":"237","line":10,"column":8,"nodeType":"214","messageId":"215","endLine":10,"endColumn":19},{"ruleId":"212","severity":1,"message":"238","line":17,"column":8,"nodeType":"214","messageId":"215","endLine":17,"endColumn":12},{"ruleId":"212","severity":1,"message":"239","line":54,"column":12,"nodeType":"214","messageId":"215","endLine":54,"endColumn":27},{"ruleId":"212","severity":1,"message":"240","line":54,"column":29,"nodeType":"214","messageId":"215","endLine":54,"endColumn":47},{"ruleId":"212","severity":1,"message":"226","line":55,"column":12,"nodeType":"214","messageId":"215","endLine":55,"endColumn":22},{"ruleId":"212","severity":1,"message":"241","line":65,"column":12,"nodeType":"214","messageId":"215","endLine":65,"endColumn":24},{"ruleId":"212","severity":1,"message":"242","line":65,"column":26,"nodeType":"214","messageId":"215","endLine":65,"endColumn":41},{"ruleId":"243","severity":1,"message":"244","line":70,"column":5,"nodeType":"245","endLine":70,"endColumn":20,"suggestions":"264"},{"ruleId":"212","severity":1,"message":"247","line":99,"column":11,"nodeType":"214","messageId":"215","endLine":99,"endColumn":26},{"ruleId":"212","severity":1,"message":"248","line":103,"column":11,"nodeType":"214","messageId":"215","endLine":103,"endColumn":28},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'AddAdmin' is defined but never used.","'AddRoute' is defined but never used.","no-native-reassign",["265"],"no-negated-in-lhs",["266"],"'logo' is defined but never used.","'Route' is defined but never used.","'store' is defined but never used.","'classes' is assigned a value but never used.","'modalStyle' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'firestore' is assigned a value but never used.",["265"],["266"],"'DataGrid' is defined but never used.","'handleToggle' is assigned a value but never used.","'handleOpenstations' is assigned a value but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'IconButton' is defined but never used.","'CommentIcon' is defined but never used.","'swal' is defined but never used.","'currentStations' is assigned a value but never used.","'setCurrentStations' is assigned a value but never used.","'openStations' is assigned a value but never used.","'setOpenStations' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDataToShow'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [datatoshow.datatoshow] as a second argument to the useEffect Hook.","MemberExpression",["267"],"'handelOpenModal' is assigned a value but never used.","'handelAddStations' is assigned a value but never used.","'Modal' is defined but never used.","'Grid' is defined but never used.","'FormHelperText' is defined but never used.","'getModalStyle' is defined but never used.","'setName' is assigned a value but never used.","'setPhone' is assigned a value but never used.","'setIdNumber' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["268"],"no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},{"desc":"269","fix":"271"},"Add dependencies array: [datatoshow.datatoshow]",{"range":"272","text":"273"},{"range":"274","text":"273"},[2419,2419],", [datatoshow.datatoshow]",[2419,2419]]